{"version":3,"sources":["utils/auth-provider.ts","utils/index1.ts","utils/use-async.ts","components/lib.tsx","context/auth-context.tsx","login/loginantd.tsx","login/register.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","login/index.tsx","components/id-select.tsx","screens/project-list-tsx/search-panel.tsx","components/pin.tsx","utils/http.ts","utils/index.js","utils/project.ts","utils/url.ts","screens/project-list-tsx/list.tsx","screens/project-list-tsx/util.ts","screens/project-list-tsx/index.tsx","utils/task.ts","screens/kanban/util.ts","assets/task.svg","assets/bug.svg","screens/kanban/create-task.tsx","components/mark.tsx","screens/kanban/kanban-column.tsx","utils/task-type.ts","utils/kanban.ts","components/task-type-select.tsx","components/user-select.tsx","screens/kanban/search-panel.tsx","screens/kanban/create-kanban.tsx","screens/kanban/task-modal.tsx","screens/kanban/index.tsx","screens/epic/create-epic.tsx","utils/epic.ts","screens/epic/index.tsx","screens/epic/util.ts","screens/project/index.tsx","assets/software-logo.svg","screens/project-list-tsx/project-modal.tsx","components/project-popover.tsx","components/user-popover.tsx","screens/allPage/allPage.tsx","components/error-boundary.tsx","App.tsx","reportWebVitals.ts","screens/project-list-tsx/project-list.slice.ts","store/auth.slice.ts","store/index.ts","context/index.tsx","index.tsx"],"names":["localStorageKey","handleUserResponse","user","b","window","localStorage","setItem","JSON","stringify","apiURL","process","loginapi","param","fetch","method","headers","body","then","response","a","ok","json","data","obj","Promise","reject","register","res","logOut","removeItem","useMount","callback","useEffect","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","current","resetRoute","location","href","origin","defaultInitialState","stat","error","defaultConfig","throwOnError","useAsync","initialState","initialConfig","useState","state","setState","mountedRef","useMountedRef","config","retry","setRetry","setData","useCallback","setError","isIdle","isLoading","isError","isSuccess","run","promise","runConfig","Error","catch","Row","styled","div","props","between","undefined","marginBottom","gap","FullPage","FullPageLoading","size","FullPageErrorFallback","Text","type","message","ErrorBox","value","ButtonNoPadding","Button","ScreenContainer","AuthContext","React","createContext","displayName","bootstrapUser","token","getItem","parse","AuthProvider","children","queryClient","useQueryClient","setUser","Provider","login","form","auth","clear","useAuth","context","useContext","layout","labelCol","span","wrapperCol","LoginScrren","onError","handleSubmit","values","onFinish","initialValues","username","password","Item","name","rules","required","label","placeholder","LongButton","loading","htmlType","RegisterScrren","cpassword","id","LoginScreen","isRegister","setIsRegister","Container","Header","Background","ShoadCard","Title","onClick","h2","left","right","header","logo","Card","toNumber","isNaN","Number","IdSelect","onChange","defaultOptionName","options","restProps","length","Option","map","option","SearchPanel","setParam","users","style","evt","target","persionId","height","Pin","checked","onCheckedChange","count","Boolean","http","endpoint","customConfig","Authorization","toUpperCase","qs","status","reload","useHttp","cleanObject","object","resutl","Object","keys","forEach","key","isFalsy","log","func","delay","timeout","clearTimeout","setTimeout","debounce","console","useProjects","client","useQuery","useEditProject","useMutation","params","onSuccess","invalidateQueries","useProjecDetail","enabled","useAddProject","useUrlQueryParam","useSearchParams","searchParams","setSearchParams","useSetUrlSearchParam","useMemo","reduce","pre","cur","get","setSearchParam","o","fromEntries","useProjectModal","projectCreate","setProjectCreate","editingProjectId","setEditingProjectId","editingProjectDetail","projectModalOpenUrl","open","close","startEdit","List","mutate","pagination","columns","render","project","pin","pinProject","dataIndex","sorter","localeCompare","to","String","find","created","dayjs","format","rowKey","More","deleteProject","useDelectProject","mutateAsync","overlay","Modal","confirm","content","okText","onOk","useProjectsSearchParams","ProjectListScreen","setUsers","debounceParam","debounceValue","setDebounceValue","useDebounce","list","justify","align","setprojectModalOpen","dataSource","whyDidYouRender","useTask","useGetKanbanId","useLocation","pathname","match","useProjectInUrl","useKanbanSearchParams","projectId","useTasksSearchParams","debouncedName","typeId","processorId","tagId","useTasksModal","editingTaskId","setEditingTaskId","useTaskDetail","taskDetail","taskTypeOpenUrl","CreateTask","setName","inputMode","setInputMode","addTask","useAddTask","submit","kanbanid","autoFocus","onPressEnter","Mark","keyWord","arr","split","item","index","color","TaskTypeIcon","taskTypes","useTaskTypes","src","taskIcon","bugIcon","alt","TaskCard","task","delTask","useDeletTask","cursor","fontSize","cancelText","kanban","delKanban","useDeletKanban","KanbanColumn","allTasks","tasks","filter","TasksContainer","TaskTypeSelect","taskTypesList","UserSelect","width","CreateKanban","addKanban","useAddKanban","alert","e","margin","TaskModal","useForm","editTask","useTaskEdit","getFieldsValue","setFieldsValue","visible","onCancel","resetFields","forceRender","KanbanScreen","useKanban","kanbanList","loadKanban","loadTask","currentProject","isloading","ColumnsConiner","CreateEpic","useAddEpic","addEpic","onClose","destroyOnClose","textAlign","EpicScreen","useEpic","epics","del","useDeletEpic","epicCreateOpen","setEpicCreateOpen","overflow","itemLayout","renderItem","Meta","delEpic","description","start","end","epicId","ProjectScreen","routeType","names","useRouteType","Aside","mode","selectedKeys","Main","path","element","replace","aside","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fillRule","d","fill","SvgSoftwareLogo","_ref","svgRef","titleId","viewBox","xmlns","focusable","className","ref","ForwardRef","ProjectModal","useDispatch","Form","ProjectPopover","projects","refetch","pinnedProjects","placement","onVisibleChange","UserPopover","AllPage","projectModalOpen","PageHeader","HeaderLeft","HeaderRight","User","main","ErrorBoundary","fallbackRender","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","projectListSlice","createSlice","reducers","openProjectModal","closeProjectModal","authSlice","actions","action","payload","rootReducer","projectList","reducer","store","configureStore","AppProviders","QueryClient","QueryClientProvider","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f20f9463.chunk.js","sourcesContent":["//在真实环境中 如果使用firebase这种第三方文件的话，本文件不需要开发者开发\nimport { User } from 'types/user';\nconst localStorageKey = '__auth_provider_tooken__';\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\nexport const handleUserResponse = ({ user }: { user: User }) => {\n    //参数user 参数user的类型:{user:User},\n    // { user }: { user: loginParam } 返回的参数如下\n    //{\n    // user:\n    //     {\n    //         id:1,\n    //         name:\"jira\",\n    //         token:\"90ikmnbb\"\n    //     }\n    // }\n    //user: loginParam 返回的参数如下\n    //{username: \"admin\", password: \"123456\", token: \"1234567\"}\n    const b = user;\n    window.localStorage.setItem(localStorageKey, JSON.stringify(b) || '');\n    return user;\n};\n\nconst apiURL = process.env.REACT_APP_API_URL;\nexport const loginapi = (param: { username: string; password: string }) => {\n    return fetch(`${apiURL}/login`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(param),\n    }).then(async (response) => {\n        if (response.ok) {\n            const { data } = await response.json();\n            let obj = {\n                user: data,\n            };\n            //所以传入多的或者少的参数，所定义的类型并不会报错，只要定义的参数类型对即可\n            return handleUserResponse(obj);\n        } else {\n            return Promise.reject(await response.json());\n        }\n    });\n};\n\nexport const register = (param: { username: string; password: string }) => {\n    return fetch(`${apiURL}/register`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(param),\n    }).then(async (res) => {\n        if (res.ok) {\n            const { data } = await res.json();\n            let obj = {\n                user: data,\n            };\n            //所以传入多的或者少的参数，所定义的类型并不会报错，只要定义的参数类型对即可\n            return handleUserResponse(obj);\n        } else {\n            return Promise.reject(await res.json());\n        }\n    });\n};\n//返回的不是peomise 使用的不能用then，改写成下面的就可以\n// export const logOut = () => window.localStorage.removeItem(localStorageKey);\nexport const logOut = async () => window.localStorage.removeItem(localStorageKey);\n","import { useEffect, useRef, useState } from 'react';\n//===0 我们默认是有效的搜索值\nexport const isFalsy = (value: unknown) => (value === 0 ? false : !value);\nexport const isVoid = (value: unknown) => value === undefined || value === null || value === '';\n//在一个函数里，改变传入的对象是不好的\n//传入的函数object 可能是很多种形式 下面举例,因此下面的(object: object)形式，不明确，使用会报错\n//我们需要强制声明所需要的参数类型 {[key:string]:unknown} 即表示 {name:'123'};\n// let a: Object\n// a = { name: '123' };\n// a = () => { }\n// a = new RegExp('');\n// let b: { [key: string]: unknown }\n// b = {age:56}\n// b=()=>{} 错误\n\n// export const cleanObject = (object: object) => {\nexport const cleanObject = (object: { [key: string]: unknown }) => {\n    const resutl = { ...object };\n    Object.keys(resutl).forEach((key) => {\n        //@ts-ignore\n        const value = resutl[key];\n        if (isVoid(value)) {\n            //@ts-ignore\n            delete resutl[key];\n        }\n    });\n    // console.log(resutl, 'resutl');\n    return resutl;\n};\n//自定义hook\nexport const useMount = (callback: () => void) => {\n    useEffect(() => {\n        callback();\n        //控制台报警告 需要加依赖函数，eslint报的错误，但是非正确，不能加callback回调函数，会造成无限循环\n        //这边禁用掉\n        //  }, [callback]);\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n};\n\n//自定义hook,防止多次输入，多次请求\n// export const useDebounce = (value: any, delay?: number) => {\n\n// export const useDebounce = (value: unknown, delay?: number): any => {\n//对value设置unknown，显然返回的也是unknown，但是unknown不能赋值给任何变量，\n//所以这么写index.tsx的引用会报错，必须返回的时候加函数我们指定类型:any\n\nexport const useDebounce = <V>(value: V, delay?: number) => {\n    //泛型,传入什么返回什么类型\n    const [debounceValue, setDebounceValue] = useState(value);\n    useEffect(() => {\n        const timeout = setTimeout(() => setDebounceValue(value), delay);\n        return () => clearTimeout(timeout);\n    }, [value, delay]);\n\n    return debounceValue;\n};\n\n/**\n * 封装 useArray 自定义 React hook\n * @param {Array} initialArray 要处理的数组\n * @returns {Array} Object.value 处理过后的数组元素\n * @returns {Function} Object.setValue 更新数组的方法，该方法是 `useState()` 方法返回的用于更新 state 的函数\n * @returns {Function} Object.add 向数组末尾添加元素的方法\n * @returns {Function} Object.clear 该方法会将传入的数组清空\n * @returns {Function} Object.removeIndex 该方法会将指定的数组元素从数组中移除\n */\nexport const useAarray = (initialArray: any) => {\n    const [value, setValue] = useState(initialArray);\n    return {\n        value,\n        setValue,\n        add: (item: any) => setValue([...value, item]),\n        clear: () => setValue([]),\n        removeIndex: (index: number) => {\n            const copy = [...value];\n            copy.splice(index, 1);\n            setValue(copy);\n        },\n    };\n};\n//修改文档title\nexport const useDocumentTitle = (title: string, keepOnUnmount = true) => {\n    // 页面加载时: 旧oldTitle React App\n    const oldTitle = useRef(document.title).current; //useRef会保留初始值，不变的，类似于一个容器\n    // 加载后：新title\n    useEffect(() => {\n        document.title = title;\n    }, [title]);\n    //退出当前页面的时候,就回归旧oldTitle\n    useEffect(() => {\n        return () => {\n            if (!keepOnUnmount) {\n                document.title = oldTitle;\n            }\n        };\n    }, [keepOnUnmount, oldTitle]);\n};\n//返回跟路由\nexport const resetRoute = () => (window.location.href = window.location.origin);\n\n/**\n * 返回组件的挂载状态，如果还没挂载或者已经卸载，返回false,反之返回true\n * 10-1 前半部分\n */\nexport const useMountedRef = () => {\n    const mountedRef = useRef(false);\n    useEffect(() => {\n        mountedRef.current = true;\n        return () => {\n            //移除的时候变为false\n            mountedRef.current = false;\n        };\n    });\n    return mountedRef;\n};\n","import { useCallback, useState } from 'react';\nimport { useMountedRef } from './index1';\ninterface State<D> {\n    error: Error | null;\n    data: D | null;\n    stat: 'idle' | 'loading' | 'error' | 'success'; //idle,异步还未开始\n}\n\nconst defaultInitialState: State<null> = {\n    stat: 'idle',\n    data: null,\n    error: null,\n};\nconst defaultConfig = {\n    //不需要每次都抛出异常 进行处理\n    throwOnError: false,\n};\n\n/**\n * run 加useCallback 为了避免外部引用的时候 eslint的警告信息 //eslint-disable-next-line react-hooks/\n * 加useCallback实际作用是useEffect(()=>{},[param,函数])，这边放函数会导致无限循环，每次对比函数都是新的，\n * 用useCallback，会让函数保持之前的值，不会每次都是新\n * 为了方便提供给别人使用\n * usemeno与useCallback 都是在创建非基本类型的时候要以此为依赖时，每次渲染页面都重新生成新函数，在自定义hook,返回函数基本用useCallback\n *run这边未处理\n * 10-2\n */\nexport const useAsync = <D>(initialState?: State<D>, initialConfig?: typeof defaultConfig) => {\n    const [state, setState] = useState<State<D>>({\n        ...defaultInitialState,\n        ...initialState,\n    });\n    const mountedRef = useMountedRef();\n    const config = { ...defaultConfig, ...initialConfig };\n    // useState直接传入函数的含义是：惰性初始化；所以，要用useState保存函数，不能直接传入函数\n    // https://codesandbox.io/s/blissful-water-230u4?file=/src/App.js\n    const [retry, setRetry] = useState(() => () => {});\n    const setData = useCallback(\n        (data: D) =>\n            setState({\n                data,\n                stat: 'success',\n                error: null,\n            }),\n        []\n    );\n\n    const setError = useCallback(\n        (error: Error) =>\n            setState({\n                data: null,\n                stat: 'error',\n                error,\n            }),\n        []\n    );\n    //run 用来触发异步请求\n    // const run = useCallback(\n    //     , [config.throwOnError, mountedRef, state, setError, setData])\n    const run = (promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\n        //传入的类型是Promise，并且包含有D类型的数据\n        if (!promise || !promise.then) {\n            throw new Error('请传入 Promise 类型数据');\n        }\n        //重新刷新数据\n        setRetry(() => () => {\n            if (runConfig?.retry) {\n                run(runConfig?.retry(), runConfig);\n            }\n        });\n        setState({ ...state, stat: 'loading' }); //会造成无限循环，改成函数用法,但是下面类型不会定义\n        // setData(prevState => ({ ...prevState, stat: 'loading' }))\n\n        return promise\n            .then((data) => {\n                //mountedRef.current 挂载的页面在的时候才进行返回数据\n                if (mountedRef.current) setData(data);\n                return data;\n            })\n            .catch((error) => {\n                // catch会消化异常，如果不主动抛出，外面是接收不到异常的 (return error)\n                setError(error);\n                if (config.throwOnError) {\n                    //可抛出\n                    return Promise.reject(error);\n                }\n                return error; //内部消化\n            });\n    };\n    return {\n        isIdle: state.stat === 'idle',\n        isLoading: state.stat === 'loading',\n        isError: state.stat === 'error',\n        isSuccess: state.stat === 'success',\n        run,\n        setData,\n        setError,\n        retry,\n        ...state,\n    };\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Button, Spin, Typography } from 'antd';\n\nexport const Row = styled.div<{\n    gap?: number | boolean;\n    between?: boolean;\n    marginBottom?: number;\n}>`\n    display: flex;\n    align-items: center;\n    justify-content: ${(props) => (props.between ? 'space-between' : undefined)};\n    margin-bottom: ${(props) => props.marginBottom + 'rem'};\n    > * {\n        //对于下面的子元素\n        margin-top: 0 !important;\n        margin-bottom: 0 !important;\n        margin-right: ${(props) => (typeof props.gap === 'number' ? props.gap + 'rem' : props.gap ? '2rem' : undefined)};\n        //如果gap为number返回props.gap +'rem'\n        //如果不是的话 则判断下是否存在gap,存在返回默认值2rem,不存在返回undefined\n    }\n`;\nconst FullPage = styled.div`\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const FullPageLoading = () => (\n    <FullPage>\n        <Spin size={'large'} />\n    </FullPage>\n);\n\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => (\n    <FullPage>\n        <Typography.Text type=\"danger\">{error?.message}</Typography.Text>\n    </FullPage>\n);\n\n//类型守卫\n/**\n * 符合value?.message这个条件的时候 error就是Error类型( value is Error)\n */\nconst isError = (value: any): value is Error => value?.message;\nexport const ErrorBox = ({ error }: { error: unknown }) => {\n    if (isError(error)) {\n        return <Typography.Text type=\"danger\">{error?.message}</Typography.Text>;\n    }\n    return null;\n};\nexport const ButtonNoPadding = styled(Button)`\n    padding: 0;\n`;\nexport const ScreenContainer = styled.div`\n    padding: 3.2rem;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n","import React, { ReactNode, useState } from 'react';\nimport * as auth from '../utils/auth-provider';\nimport { User } from 'types/user';\nimport { http } from 'utils/http';\nimport { useMount } from 'utils/index1';\nimport { useAsync } from 'utils/use-async';\nimport { FullPageErrorFallback, FullPageLoading } from 'components/lib';\nimport { useQueryClient } from 'react-query';\n\nconst AuthContext = React.createContext<\n    | {\n          user: User | null;\n          login: (form: AuthForm) => Promise<void>;\n          register: (form: AuthForm) => Promise<void>;\n          logOut: () => Promise<void>;\n      }\n    | undefined\n>(undefined);\nAuthContext.displayName = 'AuthContext';\n\nexport interface AuthForm {\n    username: string;\n    password: string;\n}\n//防止刷新丢失信息，刷新重新token赋值\nexport const bootstrapUser = async () => {\n    let user = null;\n    const token = auth.getToken();\n    if (token) {\n        user = JSON.parse(token);\n    }\n    return user;\n};\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n    const queryClient = useQueryClient();\n    // const [user, setUser] = useState<User | null>(null); 改用useAsync\n    const { data: user, error, isIdle, isLoading, isError, run, setData: setUser } = useAsync<User | null>();\n    const login = (form: AuthForm) => auth.loginapi(form).then((user) => setUser(user));\n    const register = (form: AuthForm) => auth.register(form).then((user) => setUser(user));\n    const logOut = () =>\n        auth.logOut().then(() => {\n            setUser(null);\n            queryClient.clear();\n        });\n    //初始化的时候判断是否登陆过，获取之前登录的信息\n    useMount(() => {\n        // bootstrapUser().then(setUser); //简写\n        run(bootstrapUser()); //改用useAsync\n    });\n    if (isIdle || isLoading) {\n        return <FullPageLoading />;\n    }\n\n    if (isError) {\n        return <FullPageErrorFallback error={error} />;\n    }\n\n    return <AuthContext.Provider children={children} value={{ user, login, register, logOut }}></AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n    const context = React.useContext(AuthContext);\n    if (!context) {\n        throw new Error('error');\n    }\n    return context;\n};\n","import { useAuth } from 'context/auth-context';\nimport { Button, Form, Input } from 'antd';\nimport React from 'react';\nimport { LongButton } from './index';\nimport { useAsync } from 'utils/use-async';\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 },\n};\ninterface Base {\n    id: number;\n}\ninterface Advance extends Base {\n    name: string;\n}\nconst test = (p: Base) => {};\nconst a: Advance = { id: 1, name: '989' };\ntest(a); //传入的符合Base中的id即可，传入的参数更高级，有里面定义的参数即可不会报错\n//所以传入多的或者少的参数，所定义的类型并不会报错，只要定义的参数类型对即可，参考handleUserResponse();\n\nconst apiURL = process.env.REACT_APP_API_URL;\nexport const LoginScrren = ({ onError }: { onError: (error: Error) => void }) => {\n    const { user, login } = useAuth();\n    //用useAsync返回的error 不可以，useAsync是异步函数，返回的数值慢一步，解析7-3，15分开始\n    //return 里面可以用，return里面是异步？？？\n    const { isLoading, run } = useAsync(undefined, { throwOnError: true });\n    // const loginapi = (param: { username: string; password: string }) => {\n    //     fetch(`${apiURL}/login`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //         body: JSON.stringify(param),\n    //     }).then(async (res) => {\n    //         console.log(await res.json(),\"oplmjjjjjj\")\n    //         if (res.ok) {\n    //         }\n    //     });\n    // };\n    const handleSubmit = async (values: { username: string; password: string }) => {\n        //上面的类型由Form.Item 的name推断出来\n        try {\n            // await login(values);\n            await run(login(values));\n        } catch (e) {\n            onError(e);\n        }\n    };\n    return (\n        <Form {...layout} onFinish={handleSubmit} initialValues={{ username: 'admin', password: '123456' }}>\n            <Form.Item name={'username'} rules={[{ required: true, message: '请输入用户名' }]} label=\"账号\">\n                <Input placeholder={'用户名'} type=\"text\"></Input>\n            </Form.Item>\n            <Form.Item name={'password'} rules={[{ required: true, message: '密码不能空' }]} label=\"密码\">\n                <Input placeholder={'密码'} type=\"password\"></Input>\n            </Form.Item>\n            <LongButton loading={isLoading} htmlType={'submit'} type=\"primary\">\n                登录\n            </LongButton>\n            登录成功name:{user?.name}--- token:{user?.token}\n        </Form>\n    );\n};\n","import { useAuth } from 'context/auth-context';\nimport { Button, Form, Input } from 'antd';\nimport React from 'react';\nimport { LongButton } from './index';\nimport { useAsync } from 'utils/use-async';\nconst layout = {\n    labelCol: { span: 7 },\n    wrapperCol: { span: 17 },\n};\n\ninterface Base {\n    id: number;\n}\ninterface Advance extends Base {\n    name: string;\n}\nconst test = (p: Base) => {};\nconst a: Advance = { id: 1, name: '989' };\ntest(a); //传入的符合Base中的id即可，传入的参数更高级，有里面定义的参数即可不会报错\n//所以传入多的或者少的参数，所定义的类型并不会报错，只要定义的参数类型对即可，参考handleUserResponse();\n\nconst apiURL = process.env.REACT_APP_API_URL;\nexport const RegisterScrren = ({ onError }: { onError: (error: Error) => void }) => {\n    const { user, register } = useAuth();\n    const { isLoading, run } = useAsync(undefined, { throwOnError: true });\n    // const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    //     event.preventDefault();\n    //     const username = (event.currentTarget.elements[0] as HTMLInputElement).value;\n    //     const password = (event.currentTarget.elements[1] as HTMLInputElement).value;\n    //     register({ username, password });\n    // };\n    //cpassword只是前端验证，不参与服务器的交互，可以单独放出来\n    const handleSubmit = async ({ cpassword, ...values }: { username: string; password: string; cpassword: string }) => {\n        if (cpassword !== values.password) {\n            onError(new Error('请确认两次输入的密码一致'));\n            return;\n        }\n        //上面的类型由Form.Item 的name推断出来\n        try {\n            //  await register(values);\n            await run(register(values));\n        } catch (e) {\n            onError(e);\n        }\n    };\n    return (\n        <Form {...layout} onFinish={handleSubmit} initialValues={{ username: 'jira', password: '123456', cpassword: '123456' }}>\n            <Form.Item name={'username'} rules={[{ required: true, message: '请输入用户名' }]} label=\"账号\">\n                <Input type=\"text\" id={'username'}></Input>\n            </Form.Item>\n            <Form.Item name={'password'} rules={[{ required: true, message: '密码不能空' }]} label=\"密码\">\n                <Input type=\"password\" id={'password'}></Input>\n            </Form.Item>\n            <Form.Item name={'cpassword'} rules={[{ required: true, message: '确认密码不能空' }]} label=\"确认密码\">\n                <Input type=\"password\" id={'cpassword'}></Input>\n            </Form.Item>\n            <LongButton loading={isLoading} htmlType={'submit'} type=\"primary\">\n                注册\n            </LongButton>\n            注册成功name:{user?.name}--- token:{user?.token}\n        </Form>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/logo.6c866125.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.b423a6cf.svg\";","import React, { useState } from 'react';\n// import { LoginScrren } from './login';\nimport { LoginScrren } from './loginantd';\nimport { RegisterScrren } from './register';\nimport { Card, Button, Divider, Typography } from 'antd';\nimport styled from '@emotion/styled';\nimport logo from 'assets/logo.svg';\nimport left from 'assets/left.svg';\nimport right from 'assets/right.svg';\n\nexport const LoginScreen = () => {\n    const [isRegister, setIsRegister] = useState(false);\n    const [error, setError] = useState<Error | null>(null);\n    return (\n        // <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <Container>\n            <Header />\n            <Background>\n                {/* <Card> */}\n                <ShoadCard>\n                    <Title>{isRegister ? '请注册' : '请登录'}</Title>\n                    {error ? <Typography.Text type=\"danger\">{error.message}</Typography.Text> : null}\n                    {isRegister ? <RegisterScrren onError={setError}></RegisterScrren> : <LoginScrren onError={setError}></LoginScrren>}\n                    <Divider />\n                    <LongButton type=\"link\" onClick={() => setIsRegister(!isRegister)}>\n                        {isRegister ? '已经有账号了？直接登录' : '没有账号？注册新账号'}\n                    </LongButton>\n                </ShoadCard>\n                {/* </Card> */}\n            </Background>\n        </Container>\n    );\n};\n\n//emotion\nexport const LongButton = styled(Button)`\n    width: 100%;\n`;\n\nconst Title = styled.h2`\n    margin-bottom: 2.4rem;\n    color: rgb(94, 108, 132);\n`;\n\nconst Background = styled.div`\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    width: 100%;\n    height: 80%;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-position: left bottom, right bottom;\n    background-size: calc(((100vw - 40rem) / 2) - 3.2rem), calc(((100vw - 40rem) / 2) - 3.2rem), cover;\n    background-image: url(${left}), url(${right});\n`;\n\nconst Header = styled.header`\n    background: url(${logo}) no-repeat center;\n    padding: 5rem 0;\n    background-size: 8rem;\n    width: 100%;\n`;\n\nconst ShoadCard = styled(Card)`\n    //对于在不属于html的标签需要用()写\n    width: 40rem;\n    height: 50rem;\n    padding: 3.2rem 4rem;\n    border-radius: 0.3rem;\n    box-sizing: border-box;\n    box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n    text-align: center;\n`;\nconst Container = styled.div`\n    /* display:flex;\nflex-direction:column; */\n    min-height: 100vh;\n    align-items: center;\n`;\n","import { Select } from 'antd';\nimport react from 'react';\nimport { Raw } from 'types';\n/**\n * string | number 经常用 提取出来\n * antd 组件并不一定都有暴露组件的props，可以用react提供的下面的通用方法获取\n * 有的在SelectProps里面已经定义了，为了避免重复报错删除原先的定义，用我们自己的方法\n */\ntype SelectProps = react.ComponentProps<typeof Select>;\n\ninterface IdSelectProps extends Omit<SelectProps, 'value' | 'onChange' | 'options'> {\n    value?: Raw | null | undefined;\n    onChange?: (value?: number) => void;\n    defaultOptionName?: string;\n    options?: { name: string; id: number }[];\n}\n\n/**\n * 本组件的目的是为了传值都为number\n * value 可以传入多种类型的值\n * onChange只会回调 number|undefined 类型\n * 当 isNaN(Number(value)) 为true的时候，代表选择默认类型\n * Number('12tt')  NaN  Number('23') 23, Number无法转化的时候的值就是NaN\n * 当选择默认类型的时候，onChange会回调undefined\n * @param props\n * @constructor\n */\nconst toNumber = (value: unknown) => (isNaN(Number(value)) ? 0 : Number(value));\nexport const IdSelect = (props: IdSelectProps) => {\n    const { value, onChange, defaultOptionName, options, ...restProps } = props;\n    return (\n        <Select value={options?.length ? toNumber(value) : 0} onChange={(value) => onChange?.(toNumber(value) || undefined)} {...restProps}>\n            {defaultOptionName ? <Select.Option value={0}>{defaultOptionName}</Select.Option> : null}\n            {options?.map((option) => (\n                <Select.Option key={option.id} value={option.id}>\n                    {option.name}\n                </Select.Option>\n            ))}\n        </Select>\n    );\n};\n","import React from 'react';\n// import { useEffect, useState } from 'react';\nimport { Form, Input, Select } from 'antd';\nimport { Project } from 'types/project';\nimport { IdSelect } from 'components/id-select';\nimport { User } from 'types/user';\n\ninterface SearchPanelProps {\n    users: User[]; //users是User类型的数组，=users: {id:string,name:string}[]\n    param: Partial<Pick<Project, 'name' | 'persionId'>>;\n    // param: {\n    //     name: string;\n    //     persionId: string;\n    // };\n    setParam: (param: SearchPanelProps['param']) => void; //函数的传参形式与SearchPanelProps里面的param是一样的\n}\nexport const SearchPanel = ({ param, setParam, users }: SearchPanelProps) => {\n    return (\n        <Form layout={'inline'} style={{ marginBottom: '2rem' }}>\n            <Form.Item>\n                {/* {setParam == Object.assign({},param,{name:evt.target.value})} */}\n                <Input\n                    type=\"text\"\n                    value={param.name}\n                    placeholder=\"搜索目标请看db.json,比如无法靠人名搜,该数组没有创建对应数据\"\n                    onChange={(evt) =>\n                        setParam({\n                            ...param,\n                            name: evt.target.value,\n                        })\n                    }\n                ></Input>\n            </Form.Item>\n            <Form.Item>\n                {/* <Select\n                    value={param.persionId}\n                    onChange={(value) =>\n                        setParam({\n                            ...param,\n                            persionId: value,\n                        })\n                    }\n                >\n                    <Select.Option value={''}>负责人</Select.Option>\n                    {users.map((user) => (\n                        <Select.Option value={user.id} key={user.id}>\n                            {user.name}\n                        </Select.Option>\n                    ))}\n                </Select> */}\n                <IdSelect\n                    value={param.persionId}\n                    onChange={(value) =>\n                        setParam({\n                            ...param,\n                            persionId: value,\n                        })\n                    }\n                    defaultOptionName={'负责人'}\n                    options={users}\n                ></IdSelect>\n            </Form.Item>\n            <div style={{ height: '20px' }}></div>\n        </Form>\n    );\n};\n","import React from 'react';\r\nimport { Rate } from 'antd';\r\ntype antdPinProp = React.ComponentProps<typeof Rate>\r\ninterface pinProps extends antdPinProp{\r\n    checked: boolean;\r\n    onCheckedChange?: (checked: boolean) => void;\r\n} \r\n/**\r\n * !!value  代表Boolean(value) 传入的是数字\r\n * onCheckedChange不一定有，所以加了？.\r\n*/\r\nexport const Pin = (props:pinProps)=>{\r\n    const {checked,onCheckedChange, ...restProps} = props;\r\n  return <Rate \r\n    count={1}\r\n    value={checked?1:0}\r\n    onChange = {(value)=>onCheckedChange?.(Boolean(value))}\r\n   {...restProps}\r\n   />\r\n  \r\n}","import { useAuth } from 'context/auth-context';\nimport qs from 'qs';\nimport { useCallback } from 'react';\nimport * as auth from './auth-provider';\nconst apiURL = process.env.REACT_APP_API_URL;\n//RequestInit fetch 带的接口参数形式，全部继承过来，加上自己的参数，可以用鼠标放在fetch函数上查看\n//其他多余的参数可以统称为...customConfig\ninterface Config extends RequestInit {\n    data?: object;\n    token?: string;\n}\n//Config,没传默认为{}\nexport const http = async (endpoint: string, { data, token, headers, ...customConfig }: Config = {}) => {\n    const config = {\n        method: 'Get',\n        headers: {\n            Authorization: token ? `$Bearer ${token}` : '', //$Bearer标准格式，规定好的\n            'Content-Type': data ? 'application/json' : '',\n        },\n        ...customConfig,\n    };\n    if (config.method.toUpperCase() === 'GET') {\n        //...customConfig 会重新覆盖上面的method,所以传进来有可能是post\n        endpoint += `?${qs.stringify(data)}`;\n    } else {\n        config.body = JSON.stringify(data || {});\n    }\n    return window.fetch(`${apiURL}/${endpoint}`, config).then(async (response) => {\n        if (response.status === 401) {\n            await auth.logOut();\n            window.location.reload();\n            return Promise.reject({ message: '请重新登陆' });\n        }\n        const data = await response.json();\n        if (response.ok) {\n            return data;\n        } else {\n            //fetch 对于异常的结果不会主动抓取，所以对异常结果需要我们自己判断\n            return Promise.reject(data);\n        }\n    });\n};\n//函数里面想使用其他的hook,本就就必须是hook\n/**\n * 有的需要在useEffect 里面用的，\n * 加useCallback实际作用是useEffect(()=>{},[param,函数])，这边放函数会导致无限循环，每次对比函数都是新的，\n * 用useCallback，会让函数保持之前的值，不会每次都是新\n */\nexport const useHttp = () => {\n    const { user } = useAuth();\n    // return ([endpoint,config]:[string,Config])=>http(endpoint,{...config,token:user?.token})\n    //也可以按照下面这么写，但是为啥 组合成数组 [endpoint,config]？？？\n    return useCallback((...[endpoint, config]: Parameters<typeof http>) => http(endpoint, { ...config, token: user?.token }), [user?.token]);\n    // return (...[endpoint, config]: Parameters<typeof http>) => http(endpoint, { ...config, token: user?.token })\n\n    //要求传入一个tuple数组，下面要变成一个数组  不加...操作符前写法\n    //错误:client('projects',{data:cleanObject(debounceParam)})\n    //正确:client(['projects',{data:cleanObject(deboueParam)}])\n    //加... 写法\n    //正确:client('projects',{data:cleanObject(debounceParam)})\n    //或者想要不传入数组，在函数处加入...,可以解放里面的数据 就可以不带[]这么写\n};\n","import { useEffect, useState } from 'react';\n//===0 我们默认是有效的搜索值\nexport const isFalsy = (value) => (value === 0 ? false : !value);\n//在一个函数里，改变传入的对象是不好的\nexport const cleanObject = (object) => {\n    const resutl = { ...object };\n    Object.keys(resutl).forEach((key) => {\n        const value = resutl[key];\n        if (isFalsy(value)) {\n            delete resutl[key];\n        }\n    });\n    // console.log(resutl, 'resutl');\n    return resutl;\n};\n//自定义hook\nexport const useMount = (callback) => {\n    useEffect(() => {\n        callback();\n    }, []);\n};\n//闭包函数\nconst debounce = (func, delay) => {\n    let timeout;\n    return (...param) => {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n        timeout = setTimeout(function () {\n            func(...param);\n        }, delay);\n    };\n};\nconst log = debounce(() => console.log('500'), 5000);\nlog();\nlog();\nlog();\n//只执行最后一个log的定时任务，其他的都被清除\n\n//自定义hook,防止多次输入，多次请求\nexport const useDebounce = (value, delay) => {\n    const [debounceValue, setDebounceValue] = useState(value);\n    useEffect(() => {\n        const timeout = setTimeout(() => setDebounceValue(value), delay);\n        return () => clearTimeout(timeout);\n    }, [value, delay]);\n\n    return debounceValue;\n};\n","import { useHttp } from 'utils/http';\nimport { cleanObject } from 'utils/index';\nimport { useCallback, useEffect } from 'react';\nimport { Project } from 'types/project';\nimport { useAsync } from './use-async';\nimport { useMutation, useQuery, useQueryClient, QueryKey } from 'react-query';\nimport { useEditConfig, useDeleteConfig, useAddConfig } from './use-optimistic-options';\n/**\n * 9-5\n * fetchProjects() 返回一个Promise<D>\n * fetchProjects 返回一个  () => Promise<D> 函数\n */\nexport const useProjects1 = (param?: Partial<Project>) => {\n    const client = useHttp();\n    const { run, ...result } = useAsync<any[]>();\n    //useEffect 用到fetchProjects 所以这个也用useCallback包裹一下，避免无限循环\n    const fetchProjects = useCallback(() => client('projects', { data: cleanObject(param || {}) }), [param, client]);\n    useEffect(() => {\n        //run(client('projects', { data: cleanObject(param) }));//数据有与后台对接，但是列表没有刷新\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n        run(fetchProjects(), { retry: fetchProjects }); //再一次刷新列表数据\n    }, [param, fetchProjects]);\n    //, run, fetchProjects\n\n    return result;\n};\n\n/**\n * react-query 替代useAsync的方法\n * useQuery('projects', () => client('projects', { data: param }))\n * 上面这种写法无法监听param变化数据的变化\n * useQuery(['projects', param], () =u> client('projects', { data: param }))\n * 改成tuple类型，及可以监听param变化数据变化\n * useQuery 返回的类型是TError = unknown,index.jsx前面的用到error.message会报错，可以强制返回类型即\n * useQuery<Project[], Error>(['projects', param], () => client('projects', { data: param }))\n * 或者改写自己组件 ErrorBox\n * 有地方需要返回Project[]\n */\nexport const useProjects = (param?: Partial<Project>) => {\n    const client = useHttp();\n    // return useQuery<Project[], Error>(['projects', param], () => client('projects', { data: param }))\n    return useQuery<Project[]>(['projects', cleanObject(param)], () => client('projects', { data: cleanObject(param) }));\n};\n\nexport const useEditProject1 = () => {\n    const client = useHttp();\n    const { run, ...result } = useAsync();\n    const mutate = (params: Partial<Project>) => {\n        return run(client(`projects/${params.id}`, { data: params, method: 'PATCH' }));\n    };\n    return {\n        mutate,\n        ...result,\n    };\n};\n\n/**\n *  react-query 替代useAsync的方法\n * onSuccess 点击星星后，表示修改后重新刷新缓存的数据即名称为projects的数据\n */\nexport const useEditProject = () => {\n    // const a = 9;\n    // console.log(\"进来了\", a)\n    // const test = () => { alert(\"567\") }\n    const client = useHttp();\n    const queryClient = useQueryClient();\n    return useMutation(\n        (params: Partial<Project>) => client(`projects/${params.id}`, { data: params, method: 'PATCH' }),\n        {\n            onSuccess: () => queryClient.invalidateQueries('projects'),\n        }\n        // useEditConfig(queryKey)\n    );\n};\n\n/**\n * 获取单条信息详情\n * 第三个参数为配置参数，该参数不可空\n * enabled:!!id, 或者Boolean(id)\n */\nexport const useProjecDetail = (id?: number) => {\n    const client = useHttp();\n    return useQuery<Project>(['projectdetail', id], () => client(`projects/${id}`), {\n        enabled: Boolean(id),\n    });\n};\nexport const useAddProject1 = () => {\n    const client = useHttp();\n    const { run, ...result } = useAsync();\n    const mutate = (params: Partial<Project>) => {\n        return run(client(`projects}`, { data: params, method: 'POST' }));\n    };\n    return {\n        mutate,\n        ...result,\n    };\n};\n\n/**\n *  react-query 替代useAsync的方法\n * onSuccess 点击星星后，表示修改后重新刷新缓存的数据即名称为projects的数据\n */\n\nexport const useAddProject = () => {\n    const client = useHttp();\n    const queryClient = useQueryClient();\n    return useMutation(\n        (params: Partial<Project>) => client(`projects`, { data: params, method: 'POST' }),\n        {\n            onSuccess: () => queryClient.invalidateQueries('projects'),\n        }\n        // useAddConfig(queryKey)\n    );\n};\n\nexport const useDelectProject = () => {\n    const client = useHttp();\n    const queryClient = useQueryClient();\n    return useMutation(\n        (params: Partial<Project>) => client(`projects/${params.id}`, { data: params, method: 'DELETE' }),\n        {\n            onSuccess: () => queryClient.invalidateQueries('projects'),\n        }\n        // useDeleteConfig(queryKey)\n    );\n};\n\nfunction uneMutation() {\n    throw new Error('Function not implemented.');\n}\n","import { useMemo } from 'react';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\nimport { cleanObject } from './index1';\nimport { useProjecDetail } from './project';\n/**\n * 返回页面url中，指定键的参数值\n * 返回[\n *  {name: \"90\", id: \"89\"},\n *  {}\n * ]\n * 因为返回的类型是tuple,里面组成的数组的类型不一样，会造成返回的类型错乱，加as const防止错乱类型,视频8-5\n *  当obj是基本类型的时候，就不会无限循环\n * 当 obj是对象的时候，就会无限循环\n * 当 obj 是对象的useState时，不会无限循环 即 const [obj, setObj] = useState([]);这种形式出来就不会无限循环 8-6\n */\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\n    // 抽取前\n    // const [searchParams, setSearchParams] = useSearchParams();\n    //抽取后\n    const [searchParams] = useSearchParams();\n    const setSearchParams = useSetUrlSearchParam();\n    return [\n        useMemo(\n            () =>\n                keys.reduce((pre: { [p in K]: string }, cur: K) => {\n                    return { ...pre, [cur]: searchParams.get(cur) || '' };\n                    // }, {}), reduce 传入什么类型就返回什么类型，初始传入{}\n                }, {} as { [cur in K]: string }),\n            //eslint-disable-next-line react-hooks/exhaustive-deps\n            [searchParams]\n        ),\n        (params: Partial<{ [key in K]: unknown }>) => {\n            //抽取前\n            // const o = cleanObject({ ...Object.fromEntries(searchParams), ...params }) as URLSearchParamsInit;\n            // return setSearchParams(o);\n            // as URLSearchParamsInit 是因为useSearchParams需要这个类型，所以强制转换成这个类型\n            // ...Object.fromEntries useSearchParams({name:'99'})自带iterator,读取iterator，将传入的数据转化成一个对象\n            // iterator 类似于array,obj,都有iterator,可以重新定义循环的方法，取用 const a=[1,2,5],\n            //a[Symbol.iterator] 返回一个方法证明数组有自己带的 iterator 8-7\n            // iterator: https://codesandbox.io/s/upbeat-wood-bum3j?file=/src/index.js\n            //抽取后\n            return setSearchParams(params);\n        },\n    ] as const;\n};\n\n/**\n * 将useUrlQueryParam的返回部分抽取出来\n */\nexport const useSetUrlSearchParam = () => {\n    const [searchParams, setSearchParam] = useSearchParams();\n    return (params: { [key in string]: unknown }) => {\n        const o = cleanObject({\n            ...Object.fromEntries(searchParams),\n            ...params,\n        }) as URLSearchParamsInit;\n        return setSearchParam(o);\n    };\n};\n/**\n * 加as const 返回的是tuple，防止类型错乱\n * 返回的形式是 return [ projectCreate,open,close] as const，数组的话，一般三个以内\n * 取值可以直接将名字重命名，即[pro,opend,clised] = useProjectModal()\n * 多个的话 返回对象，对象的不好点就是不能直接重命名，只能按名字取\n * 返回的形式是 return {projectCreate,open,close} 只能 {projectCreate,open,close} = useProjectModal()\n * 或者{projectCreate:pro,open,close} = useProjectModal();用:修改名字\n * 在url上直接加参数，控制弹窗开关\n * 创建还是编辑加参数区别\n * projectCreate 创建\n * editingProjectId 编辑\n */\nexport const useProjectModal = () => {\n    const [{ projectCreate }, setProjectCreate] = useUrlQueryParam(['projectCreate']);\n    const [{ editingProjectId }, setEditingProjectId] = useUrlQueryParam(['editingProjectId']);\n    const { data: editingProjectDetail, isLoading } = useProjecDetail(Number(editingProjectId));\n\n    const open = () => setProjectCreate({ projectCreate: true });\n    // const close = () => setProjectCreate({ projectCreate: false })\n    const close = () => {\n        if (projectCreate === 'true') {\n            setProjectCreate({ projectCreate: undefined }); //解决关闭的时候url不带参数\n        } else {\n            setEditingProjectId({ editingProjectId: undefined });\n        }\n    };\n    const startEdit = (id: number) => setEditingProjectId({ editingProjectId: id });\n    return {\n        projectModalOpenUrl: projectCreate === 'true' || Boolean(editingProjectId),\n        open,\n        close,\n        startEdit,\n        editingProjectDetail,\n        isLoading,\n    };\n    // return [ projectCreate,open,close] as const\n};\n","import { Dropdown, Menu, Modal, Table, TableProps } from 'antd';\nimport { ButtonNoPadding } from 'components/lib';\nimport { Pin } from 'components/pin';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { User } from 'types/user';\nimport { Project } from 'types/project';\nimport { useDelectProject, useEditProject } from 'utils/project';\nimport { useProjectModal } from 'utils/url';\nimport { useProjectsQueryKey } from './util';\n\ninterface ListProps extends TableProps<Project> {\n    //为了方便对新加的参数 loading,等加一次需要传一次变量，直接继承表格的所有类型\n    //list: Project[]; //list被定义为Project类型的数组，\n    users: User[];\n    // refresh?: () => void;\n    setprojectModalOpen: (isOpen: boolean) => void;\n}\n/**\n * onCheckedChange 需要直接传参绑定一个与后端传参的接口，可以用usehook,但是usehook只能写在组件的最前端，\n * 不能直接调用，所以不能直接传参数 9-3\n * 因为得到的传参顺序不一样，可以改写成下面的\n * const pinProject = (id: number) => (pin: boolean) => mutate({ id, pin });\n * 调用：onCheckedChange={pinProject(project.id)}\n * then(props.refresh) 编辑后再一次刷新数据\n */\nexport const List = ({ users, ...props }: ListProps) => {\n    const { mutate } = useEditProject();\n    // const pinProject = (id: number, pin: boolean) => mutate({ id, pin }).then(props.refresh);\n    const pinProject = (id: number, pin: boolean) => mutate({ id, pin });\n\n    return (\n        // 数据源没有带key字段的，需要在表格中指定rowKey=\"id\"，标识每一行的key\n        <Table\n            pagination={false}\n            columns={[\n                {\n                    title: <Pin checked={true} />,\n                    render(value, project) {\n                        return <Pin checked={project.pin} onCheckedChange={(pin) => pinProject(project.id, pin)}></Pin>;\n                    },\n                },\n                {\n                    title: '名称',\n                    key: 'name',\n                    dataIndex: 'name',\n                    sorter: (a, b) => a.name.localeCompare(b.name),\n                },\n                {\n                    title: '链接',\n                    sorter: (a, b) => a.name.localeCompare(b.name),\n                    render(value, project) {\n                        return <Link to={String(project.id)}>{project.name}</Link>;\n                    },\n                },\n                {\n                    title: '部门',\n                    dataIndex: 'organization',\n                },\n                {\n                    title: '负责人',\n                    render(value, project) {\n                        return <span>{users.find((user) => user.id === project.persionId)?.name || '未知'}</span>;\n                    },\n                },\n                {\n                    title: '创建时间',\n                    render(value, project) {\n                        return <span>{project.created ? dayjs(project.created).format('YYYY-MM-DD') : '无'}</span>;\n                    },\n                },\n                {\n                    render(value, project) {\n                        return <More project={project}></More>;\n                    },\n                },\n            ]}\n            {...props}\n            rowKey=\"id\"\n        ></Table>\n    );\n    // return (\n    //     <table>\n    //         <thead>\n    //             <tr>\n    //                 <td>名称</td>\n    //                 <td>负责人</td>\n    //             </tr>\n    //         </thead>\n    //         <tbody>\n    //             {list.map((project) => (\n    //                 <tr key={project.id}>\n    //                     <td>{project.name}</td>\n    //                     {/* <td>{project.persionId}</td> */}\n    //                     <td>{users.find((user) => user.id === project.persionId)?.name || '未知'}</td>\n    //                 </tr>\n    //             ))}\n    //         </tbody>\n    //     </table>\n    // );\n};\n\nconst More = ({ project }: { project: Project }) => {\n    const { open, startEdit } = useProjectModal();\n    const editProject = (id: number) => startEdit(id);\n    const { mutateAsync: deleteProject } = useDelectProject();\n    const confirmDeleteProject = (id: number) => {\n        Modal.confirm({\n            title: '确定删除这个项目吗?',\n            content: '点击确定删除',\n            okText: '确定',\n            onOk() {\n                deleteProject({ id });\n            },\n        });\n    };\n    return (\n        <Dropdown\n            overlay={\n                <Menu>\n                    <Menu.Item key={'edit'}>\n                        {/* <ButtonNoPadding type=\"link\" onClick={() => props.setprojectModalOpen(true)}>\n                        编辑\n                    </ButtonNoPadding> */}\n                        <ButtonNoPadding type=\"link\" onClick={() => editProject(project.id)}>\n                            编辑\n                        </ButtonNoPadding>\n                        <ButtonNoPadding type=\"link\" onClick={() => confirmDeleteProject(project.id)}>\n                            删除\n                        </ButtonNoPadding>\n                    </Menu.Item>\n                </Menu>\n            }\n        >\n            <ButtonNoPadding type=\"link\">...</ButtonNoPadding>\n        </Dropdown>\n    );\n};\n","import { useMemo } from 'react';\nimport { useUrlQueryParam } from 'utils/url';\n\nexport const useProjectsSearchParams = () => {\n    const [param, setParam] = useUrlQueryParam(['name', 'persionId']);\n    //从url得到的数据默认都是string,这边需要转换成number\n    // const projectParam = {...param,persionId:Number(param.persionId)||undefined};\n    //useMemo防止无限循环\n    return [useMemo(() => ({ ...param, persionId: Number(param.persionId) || undefined }), [param]), setParam] as const;\n};\n\nexport const useProjectsQueryKey = () => {\n    const [params] = useProjectsSearchParams();\n    return ['projects', params];\n};\n","import React from 'react';\nimport * as qs from 'qs';\nimport { cleanObject, useMount, useDebounce, useDocumentTitle } from '../../utils/index1';\nimport { useEffect, useState } from 'react';\nimport { SearchPanel } from './search-panel';\nimport { List } from './list';\nimport { useHttp } from 'utils/http';\nimport styled from '@emotion/styled';\nimport { Row, Typography } from 'antd';\nimport { useAsync } from 'utils/use-async';\nimport { useProjects } from 'utils/project';\nimport { useProjectModal, useUrlQueryParam } from 'utils/url';\nimport { useProjectsSearchParams } from './util';\nimport { ButtonNoPadding, ErrorBox } from 'components/lib';\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const ProjectListScreen = (props: { setprojectModalOpen: (isOpen: boolean) => void }) => {\n    // console.log(useUrlQueryParam(['name', 'id']));\n    useDocumentTitle('项目列表', false);\n    const [users, setUsers] = useState([]);\n    const { open } = useProjectModal();\n    // const [param, setParam] = useState({\n    //     name: '',\n    //     persionId: '',\n    // });\n    // const [key] = useState<('name'|'persionId')[]>(['name','persionId'])\n    // const [param] = useUrlQueryParam(key);\n    // const [param, setParam] = useUrlQueryParam(['name', 'persionId']);\n    const [param, setParam] = useProjectsSearchParams();\n    const debounceParam = useDebounce(param, 200);\n    // const [list, setList] = useState([]);\n    const client = useHttp();\n    //data重命名为list 与之前保持一致 useAsync传入一个数组，project[],表示对象数组\n    // const {run,isLoading,isError,data:list} = useAsync<any[]>();\n    // useEffect(() => {\n    useMount(() => {\n        //http.ts start\n        // fetch(`${apiURL}/users`).then(async (res) => {\n        //     if (res.ok) {\n        //         setUsers(await res.json());\n        //     }\n        // });\n        client('users').then((res) => setUsers(res));\n        //http.ts end\n    });\n    // }, []);\n\n    // useEffect(() => {\n    // fetch(`${apiURL}/projects?name=${param.name}&persionId=${param.persionId}`) json-server 会对name为空进行搜索，name为空时需做删除处理，函数cleanObject，qs自动将对象变为&的形式\n\n    //http.ts start\n\n    //     fetch(\n    //         `${apiURL}/projects?${qs.stringify(\n    //             // cleanObject(param)\n    //             cleanObject(debounceParam)\n    //         )}`\n    //     ).then(async (res) => {\n    //         if (res.ok) {\n    //             setList(await res.json());\n    //         }\n    //     });\n    // },\n    // [debounceParam]);\n    // client('projects', { data: cleanObject(debounceParam) }).then((res) => setList(res))\n    // run( client('projects', { data: cleanObject(debounceParam) }))\n\n    // const { isLoading, error, data: list, retry } = useProjects(debounceParam);\n    const { isLoading, error, data: list } = useProjects(debounceParam);\n\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    // }, [debounceParam]);\n\n    //http.ts end\n\n    // }, [param]);\n\n    //不能每一个初始化都写一个useEffect，可以提取出useEffect，自定义hook\n\n    return (\n        <Container>\n            <Row justify={'space-between'} align={'middle'}>\n                <h1>项目列表</h1>\n                {/* <ButtonNoPadding type=\"link\" onClick={() => props.setprojectModalOpen(true)}>\n                    创建项目\n                </ButtonNoPadding> */}\n                <ButtonNoPadding type=\"link\" onClick={open}>\n                    创建项目\n                </ButtonNoPadding>\n            </Row>\n            {/* <button onClick={retry}>刷新列表数据</button> */}\n            <SearchPanel param={param} setParam={setParam} users={users}></SearchPanel>\n            {/* {error ? <Typography.Text type=\"danger\">{error.message}</Typography.Text> : null} */}\n            <ErrorBox error={error}></ErrorBox>\n            {/* <List setprojectModalOpen={props.setprojectModalOpen} refresh={retry} dataSource={list || []} users={users} loading={isLoading}></List> */}\n            <List setprojectModalOpen={props.setprojectModalOpen} dataSource={list || []} users={users} loading={isLoading}></List>\n        </Container>\n    );\n};\nProjectListScreen.whyDidYouRender = false;\nconst Container = styled.div`\n    padding: 3rem;\n    width: 100%;\n`;\n","import { useHttp } from 'utils/http';\nimport { Task } from 'types/task';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\n\nexport const useTask = (params?: Partial<Task>) => {\n    const client = useHttp();\n    return useQuery<Task[]>(['tasks', params], () => client('taskApi', { data: params }));\n};\n\nexport const useAddTask = () => {\n    const client = useHttp();\n    const queryClient = useQueryClient();\n    return useMutation((params: Partial<Task>) => client(`taskApi`, { data: params, method: 'POST' }), {\n        onSuccess: () => queryClient.invalidateQueries('tasks'),\n    });\n};\n\nexport const useTaskDetail = (id?: number) => {\n    const client = useHttp();\n    return useQuery<Task>(['tasks', id], () => client(`taskApi/${id}`), {\n        enabled: Boolean(id),\n    });\n};\n\nexport const useTaskEdit = () => {\n    const client = useHttp();\n    const queryClient = useQueryClient();\n    return useMutation((params: Partial<Task>) => client(`taskApi/${params.id}`, { data: params, method: 'PATCH' }), {\n        onSuccess: () => queryClient.invalidateQueries('tasks'),\n    });\n};\n\nexport const useDeletTask = () => {\n    const client = useHttp();\n    const queryClient = useQueryClient();\n    return useMutation(({ id }: { id: number }) => client(`taskApi/${id}`, { method: 'DELETE' }), {\n        onSuccess: () => queryClient.invalidateQueries('tasks'),\n    });\n};\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router';\nimport { useDebounce } from 'utils';\nimport { useProjecDetail } from 'utils/project';\nimport { useTaskDetail } from 'utils/task';\nimport { useUrlQueryParam } from 'utils/url';\n/**\n * pathname是(projects/2/kanban)\n * pathname.match(/projects\\/(\\d+)/) =\n * [\"projects/2\", \"2\", index: 0, input: \"projects/2/kanban\", groups: undefined]\n */\nexport const useGetKanbanId = () => {\n    const { pathname } = useLocation();\n    const id = pathname.match(/projects\\/(\\d+)/)?.[1];\n    return Number(id);\n};\nexport const useProjectInUrl = () => {\n    const id = useGetKanbanId();\n    return useProjecDetail(id);\n};\n/**useKanbanSearchParams useTasksSearchParams\n * 这边为了获取单独的数据，但是数据库没有处理，所以获取的还是全部的数据\n */\nexport const useKanbanSearchParams = () => ({ projectId: useGetKanbanId() });\nexport const useKanbansQueryKey = () => ['kanbans', useKanbanSearchParams()];\n\n/**\n * 读取看板页面搜索额内容\n */\nexport const useTasksSearchParams = () => {\n    const [param, setParam] = useUrlQueryParam(['name', 'typeId', 'processorId', 'tagId']);\n    const debouncedName = useDebounce(param.name, 200);\n    const projectId = useGetKanbanId();\n    return useMemo(\n        () => ({\n            projectId,\n            typeId: Number(param.typeId) || undefined,\n            processorId: Number(param.processorId) || undefined,\n            tagId: Number(param.tagId) || undefined,\n            name: debouncedName === '' ? undefined : debouncedName,\n        }),\n        [projectId, param]\n    );\n};\nexport const useTasksQueryKey = () => ['tasks', useTasksSearchParams()];\n\n/**\n * task编辑弹窗\n * useUrlQueryParam 返回的都是字符串类型，所以是 taskType === 'true'\n */\nexport const useTasksModal = () => {\n    const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam(['editingTaskId']);\n    const { data: taskDetail, isLoading } = useTaskDetail(Number(editingTaskId));\n    const startEdit = (id: number) => {\n        setEditingTaskId({ editingTaskId: id });\n    };\n    const close = () => setEditingTaskId({ editingTaskId: '' });\n    return {\n        taskTypeOpenUrl: !!editingTaskId,\n        startEdit,\n        close,\n        taskDetail,\n        editingTaskId: Number(editingTaskId),\n        isLoading,\n    };\n};\n","export default __webpack_public_path__ + \"static/media/task.69774797.svg\";","export default __webpack_public_path__ + \"static/media/bug.5d8e8fd5.svg\";","import { Button, Card, Input } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useAddTask } from 'utils/task';\n\nexport const CreateTask = ({ id }: { id: number }) => {\n    const [name, setName] = useState('');\n    const [inputMode, setInputMode] = useState(false);\n    const { mutateAsync: addTask } = useAddTask();\n    const submit = async () => {\n        await addTask({ name, kanbanid: id, typeId: 1 });\n        setInputMode(false);\n        setName('');\n    };\n    const toggle = () => {\n        setInputMode(!inputMode);\n    };\n    useEffect(() => {\n        if (!inputMode) {\n            setName('');\n        }\n    }, [inputMode]);\n\n    if (!inputMode) {\n        return <div onClick={toggle}>+创建事务</div>;\n    }\n    return (\n        <Card>\n            <Input placeholder={'需要添加什么'} autoFocus={true} onPressEnter={submit} value={name} onChange={(evt) => setName(evt.target.value)} />\n        </Card>\n    );\n};\n","import React from 'react';\n\nexport const Mark = ({ name, keyWord }: { name: string; keyWord: string | undefined }) => {\n    if (!keyWord) {\n        return <span>{name}</span>;\n    }\n    const arr = name.split(keyWord);\n    console.log(arr, 'arr');\n\n    return (\n        <>\n            {arr.map((item, index) => (\n                <span key={index}>\n                    {item}\n                    {index === arr.length - 1 ? null : <span style={{ color: '#257AFD' }}>{keyWord}</span>}\n                </span>\n            ))}\n        </>\n    );\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Kanban } from 'types/kanban';\nimport { useTask, useDeletTask } from 'utils/task';\nimport { useDeletKanban } from 'utils/kanban';\nimport { useTaskTypes } from 'utils/task-type';\nimport { useTasksSearchParams } from './util';\nimport taskIcon from 'assets/task.svg';\nimport bugIcon from 'assets/bug.svg';\nimport { Button, Card, Dropdown, Menu, Modal } from 'antd';\nimport { CreateTask } from './create-task';\nimport { useTasksModal } from './util';\nimport { Task } from 'types/task';\nimport { Mark } from 'components/mark';\nimport { Row } from 'components/lib';\nconst TaskTypeIcon = ({ id }: { id: number }) => {\n    const { data: taskTypes } = useTaskTypes();\n    const name = taskTypes?.find((item) => item.id === id)?.name;\n    if (!name) {\n        return null;\n    }\n    return <img src={name === 'task' ? taskIcon : bugIcon} alt={'task-icon'}></img>;\n};\nconst TaskCard = ({ task }: { task: Task }) => {\n    const { startEdit } = useTasksModal();\n    const { name: keyWord } = useTasksSearchParams();\n    const { mutateAsync: delTask } = useDeletTask();\n    const startDeleteTask = () => {\n        Modal.confirm({\n            okText: '确定',\n            cancelText: '取消',\n            title: '确定删除看板吗',\n            onOk() {\n                return delTask({ id: task.id });\n            },\n        });\n    };\n    return (\n        <Card style={{ marginBottom: '.5rem', cursor: 'pointer' }} key={task.id}>\n            <div>\n                <div>\n                    <Mark name={task.name} keyWord={keyWord}></Mark>\n                </div>\n                <Row between={true}>\n                    <TaskTypeIcon id={task.typeId}></TaskTypeIcon>\n                    <div>\n                        <Button type={'link'} size={'small'} style={{ fontSize: '12px' }} onClick={() => startEdit(task.id)}>\n                            编辑\n                        </Button>\n                        <Button type={'link'} size={'small'} style={{ fontSize: '12px', color: 'red' }} onClick={() => startDeleteTask()}>\n                            删除\n                        </Button>\n                    </div>\n                </Row>\n            </div>\n        </Card>\n    );\n};\nconst More = ({ kanban }: { kanban: Kanban }) => {\n    const { mutateAsync: delKanban } = useDeletKanban();\n    const startDeleteKanban = () => {\n        Modal.confirm({\n            okText: '确定',\n            cancelText: '取消',\n            title: '确定删除看板吗',\n            onOk() {\n                return delKanban({ id: kanban.id });\n            },\n        });\n    };\n    const overlay = (\n        <Menu>\n            <Menu.Item>\n                <Button type={'link'} onClick={startDeleteKanban}>\n                    删除\n                </Button>\n            </Menu.Item>\n        </Menu>\n    );\n    return (\n        <div>\n            <Dropdown overlay={overlay}>\n                <Button type={'link'}>...</Button>\n            </Dropdown>\n        </div>\n    );\n};\nexport const KanbanColumn = ({ kanban }: { kanban: Kanban }) => {\n    const { data: allTasks } = useTask(useTasksSearchParams());\n    const tasks = allTasks?.filter((item) => item.kanbanid === kanban.id);\n\n    return (\n        <Container>\n            <Row between={true}>\n                <h3>{kanban?.name}</h3>\n                <More kanban={kanban}></More>\n            </Row>\n            <TasksContainer>\n                {tasks?.map((item) => (\n                    <TaskCard key={item.id} task={item}></TaskCard>\n                ))}\n\n                <CreateTask id={kanban.id}></CreateTask>\n            </TasksContainer>\n        </Container>\n    );\n};\n\nexport const Container = styled.div`\n    min-width: 27rem;\n    border-radius: 6px;\n    background-color: rgb(244, 245, 247);\n    display: flex;\n    flex-direction: column;\n    padding: 0.7rem 0.7rem 1rem;\n    margin-right: 1.5rem;\n`;\n\nconst TasksContainer = styled.div`\n    overflow: scroll;\n    flex: 1;\n\n    ::-webkit-scrollbar {\n        display: none;\n    }\n`;\n","import { useHttp } from 'utils/http';\nimport { TaskType } from 'types/task-type';\nimport { useQuery } from 'react-query';\n\nexport const useTaskTypes = () => {\n    const client = useHttp();\n    return useQuery<TaskType[]>(['taskTypes'], () => client('taskTypeApi'));\n};\n","import { useHttp } from 'utils/http';\nimport { Kanban } from 'types/kanban';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\n\nexport const useKanban = (params?: Partial<Kanban>) => {\n    const client = useHttp();\n    return useQuery<Kanban[]>(['kanbans', params], () => client('kanbanApi', { data: params }));\n};\n\nexport const useAddKanban = () => {\n    const client = useHttp();\n    const queryClient = useQueryClient();\n    return useMutation((params: Partial<Kanban>) => client(`kanbanApi`, { data: params, method: 'POST' }), {\n        onSuccess: () => queryClient.invalidateQueries('kanbans'),\n    });\n};\n\nexport const useDeletKanban = () => {\n    const client = useHttp();\n    const queryClient = useQueryClient();\n    return useMutation(({ id }: { id: number }) => client(`kanbanApi/${id}`, { method: 'DELETE' }), {\n        onSuccess: () => queryClient.invalidateQueries('kanbans'),\n    });\n};\n","import React, { useState } from 'react';\nimport { IdSelect } from 'components/id-select';\nimport { useMount } from '../utils/index1';\nimport { useHttp } from 'utils/http';\n\nexport const TaskTypeSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n    const [taskTypesList, setUsers] = useState([]);\n    const client = useHttp();\n    useMount(() => {\n        client('taskTypeApi').then((res) => setUsers(res));\n    });\n    return <IdSelect options={taskTypesList || []} {...props} />;\n};\n","import React, { useState } from 'react';\nimport { IdSelect } from 'components/id-select';\nimport { useMount } from '../utils/index1';\nimport { useHttp } from 'utils/http';\n\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n    const [users, setUsers] = useState([]);\n    const client = useHttp();\n    useMount(() => {\n        client('users').then((res) => setUsers(res));\n    });\n    return <IdSelect options={users || []} {...props} />;\n};\n","import { Button, Input } from 'antd';\nimport { Row } from 'components/lib';\nimport { TaskTypeSelect } from 'components/task-type-select';\nimport { UserSelect } from 'components/user-select';\nimport React from 'react';\nimport { useSetUrlSearchParam } from 'utils/url';\nimport { useTasksSearchParams } from './util';\nexport const SearchPanel = () => {\n    const searchParams = useTasksSearchParams();\n    const setSearchParams = useSetUrlSearchParam();\n    const reset = () => {\n        setSearchParams({\n            typeId: undefined,\n            processorId: undefined,\n            tagId: undefined,\n            name: undefined,\n        });\n    };\n    return (\n        <div>\n            <Row marginBottom={4} gap={true}>\n                <Input\n                    style={{ width: '20rem' }}\n                    placeholder={'任务名'}\n                    value={searchParams.name}\n                    onChange={(evt) => setSearchParams({ name: evt.target.value })}\n                />\n                <UserSelect\n                    defaultOptionName={'经办人'}\n                    value={searchParams.processorId}\n                    onChange={(value) => setSearchParams({ processorId: value })}\n                />\n                <TaskTypeSelect defaultOptionName={'类型'} value={searchParams.typeId} onChange={(value) => setSearchParams({ typeId: value })} />\n                <Button onClick={reset}>清除筛选器</Button>\n            </Row>\n        </div>\n    );\n};\n","import { Button, Input } from 'antd';\nimport React, { useState } from 'react';\nimport { Container } from './kanban-column';\nimport { useGetKanbanId } from './util';\nimport { useAddKanban } from 'utils/kanban';\n/**\n *不用下面的形式，数据库创建的时候没有根据projectId进行比对，直接创建的是在所有的数据后面增加\n *await addKanban({projectId,name});\n */\nexport const CreateKanban = () => {\n    const [name, setName] = useState('');\n    const projectId = useGetKanbanId();\n    const { mutateAsync: addKanban } = useAddKanban();\n    const submit = async () => {\n        // await addKanban({projectId,name});\n        if (name === '') {\n            return alert('名字空！');\n        }\n        await addKanban({ name });\n        setName('');\n    };\n    return (\n        <Container>\n            <Input\n                size={'large'}\n                placeholder={'新建看板名称,也可以回车提交'}\n                name={name}\n                onPressEnter={() => submit()}\n                onChange={(e) => setName(e.target.value)}\n            ></Input>\n            <Button onClick={() => submit()} type={'primary'} size={'middle'} style={{ width: '100px', margin: '10px 0' }}>\n                提交\n            </Button>\n        </Container>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { Button, Form, Input, Modal, Spin } from 'antd';\nimport { useTasksModal } from './util';\nimport { useForm } from 'antd/lib/form/Form';\nimport { TaskTypeSelect } from 'components/task-type-select';\nimport { useTaskEdit } from 'utils/task';\nconst layout = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 16 },\n};\nexport const TaskModal = () => {\n    const [form] = useForm();\n    const { taskTypeOpenUrl, close, startEdit, taskDetail, isLoading, editingTaskId } = useTasksModal();\n    const { mutateAsync: editTask } = useTaskEdit();\n    const onCancel = () => {\n        close();\n        form.resetFields();\n    };\n    const onOk = async () => {\n        await editTask({ ...taskDetail, ...form.getFieldsValue() });\n        close();\n    };\n    useEffect(() => {\n        form.setFieldsValue(taskDetail);\n    }, [form, taskDetail]);\n    return (\n        <Modal visible={taskTypeOpenUrl} onCancel={onCancel} onOk={onOk} okText={'确认'} cancelText={'取消'} title={'编辑任务'} forceRender={true}>\n            {isLoading ? (\n                <Spin size=\"large\"></Spin>\n            ) : (\n                <Form form={form} {...layout} initialValues={taskDetail}>\n                    <Form.Item label={'任务名'} name={'name'} rules={[{ required: true, message: '请输入任务名' }]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item label={'类型'} name={'typeId'} rules={[{ required: true, message: '请输入类型' }]}>\n                        <TaskTypeSelect />\n                    </Form.Item>\n                </Form>\n            )}\n        </Modal>\n    );\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { useDocumentTitle } from 'utils/index1';\nimport { useKanban } from 'utils/kanban';\nimport { useGetKanbanId, useKanbanSearchParams, useProjectInUrl, useTasksSearchParams } from './util';\nimport { KanbanColumn } from './kanban-column';\nimport { SearchPanel } from './search-panel';\nimport { ScreenContainer } from 'components/lib';\nimport { useTask } from 'utils/task';\nimport { Spin } from 'antd';\nimport { CreateKanban } from './create-kanban';\nimport { TaskModal } from './task-modal';\nexport const KanbanScreen = () => {\n    useDocumentTitle('看板列表');\n    const { data: kanbanList, isLoading: loadKanban } = useKanban(useKanbanSearchParams());\n    const { isLoading: loadTask } = useTask(useTasksSearchParams());\n    const { data: currentProject } = useProjectInUrl();\n    const isloading = loadKanban || loadTask;\n    return (\n        <ScreenContainer>\n            <h1>{currentProject?.name}看板</h1>\n            <SearchPanel></SearchPanel>\n            {isloading ? (\n                <Spin size={'large'}></Spin>\n            ) : (\n                <ColumnsConiner>\n                    {kanbanList?.map((item) => (\n                        <KanbanColumn kanban={item} key={item.id}></KanbanColumn>\n                    ))}\n                    <CreateKanban></CreateKanban>\n                </ColumnsConiner>\n            )}\n            <TaskModal></TaskModal>\n        </ScreenContainer>\n    );\n};\nconst ColumnsConiner = styled.div`\n    display: flex;\n    overflow-x: auto;\n    flex: 1; //display: flex下,flex: 1是抢占父亲剩余的高度，自动填满\n`;\n","import styled from '@emotion/styled';\nimport { Drawer, DrawerProps, Input, Form, Button, DatePicker } from 'antd';\nimport { useForm } from 'antd/lib/form/Form';\nimport { ErrorBox } from 'components/lib';\nimport React, { useEffect } from 'react';\nimport { useAddEpic } from 'utils/epic';\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nexport const CreateEpic = (props: Pick<DrawerProps, 'visible'> & { onClose: () => void }) => {\n    const [form] = useForm();\n    const { mutateAsync: addEpic, isLoading, error } = useAddEpic();\n    const submit = async (values: any) => {\n        await addEpic(values);\n        props.onClose();\n    };\n    useEffect(() => {\n        form.resetFields();\n    }, [form, props.visible]);\n    return (\n        <>\n            <Drawer visible={props.visible} onClose={props.onClose} forceRender={true} destroyOnClose={true} width={680}>\n                <Container>\n                    <>\n                        <h1>创建任务组</h1>\n                        <ErrorBox error={error} />\n                        <Form {...layout} layout={'vertical'} style={{ width: '40rem' }} form={form} onFinish={submit}>\n                            <Form.Item label={'名称'} name={'name'} rules={[{ required: true, message: '请输入任务组名' }]}>\n                                <Input placeholder={'请输入任务组名称'} />\n                            </Form.Item>\n                            <Form.Item label={'开始时间'} name={'start'} rules={[{ required: true, message: '选择开始时间' }]}>\n                                <DatePicker format={'YYYY-MM-DD'} />\n                            </Form.Item>\n                            <Form.Item label={'结束时间'} name={'end'} rules={[{ required: true, message: '选择结束时间' }]}>\n                                <DatePicker format={'YYYY-MM-DD'} />\n                            </Form.Item>\n                            <Form.Item style={{ textAlign: 'right' }}>\n                                <Button loading={isLoading} type={'primary'} htmlType={'submit'}>\n                                    提交\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </>\n                </Container>\n            </Drawer>\n        </>\n    );\n};\nconst Container = styled.div`\n    height: 80vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n","import { useHttp } from 'utils/http';\nimport { Epic } from 'types/epic';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\n\nexport const useEpic = (params?: Partial<Epic>) => {\n    const client = useHttp();\n    return useQuery<Epic[]>(['epics', params], () => client('epicApi', { data: params }));\n};\n\nexport const useAddEpic = () => {\n    const client = useHttp();\n    const queryClient = useQueryClient();\n    return useMutation((params: Partial<Epic>) => client(`epicApi`, { data: params, method: 'POST' }), {\n        onSuccess: () => queryClient.invalidateQueries('epics'),\n    });\n};\n\nexport const useDeletEpic = () => {\n    const client = useHttp();\n    const queryClient = useQueryClient();\n    return useMutation(({ id }: { id: number }) => client(`epicApi/${id}`, { method: 'DELETE' }), {\n        onSuccess: () => queryClient.invalidateQueries('epics'),\n    });\n};\n","import React, { useState } from 'react';\nimport { useEpicObj } from './util';\nimport { useEpic, useDeletEpic } from 'utils/epic';\nimport { ScreenContainer, Row } from 'components/lib';\nimport { useProjectInUrl, useTasksSearchParams } from 'screens/kanban/util';\nimport { Button, List, Modal, Spin } from 'antd';\nimport { useTask } from 'utils/task';\nimport { Link } from 'react-router-dom';\nimport { CreateEpic } from './create-epic';\nexport const EpicScreen = () => {\n    const { data: currentProject } = useProjectInUrl();\n    const { data: epics, isLoading } = useEpic(useEpicObj());\n    const { data: allTasks } = useTask(useTasksSearchParams());\n    const { mutateAsync: del } = useDeletEpic();\n    const [epicCreateOpen, setEpicCreateOpen] = useState(false);\n    const delEpic = ({ id }: { id: number }) => {\n        Modal.confirm({\n            okText: '确定',\n            cancelText: '取消',\n            title: '确定删除任务吗',\n            onOk() {\n                return del({ id: id });\n            },\n        });\n    };\n    return (\n        <>\n            <ScreenContainer>\n                {isLoading ? (\n                    <Spin size={'large'}></Spin>\n                ) : (\n                    <>\n                        <Row between={true}>\n                            <h1>{currentProject?.name}任务组</h1>\n                            <Button type={'link'} onClick={() => setEpicCreateOpen(true)}>\n                                创建任务组\n                            </Button>\n                        </Row>\n                        <List\n                            style={{ overflow: 'scroll' }}\n                            dataSource={epics}\n                            itemLayout={'vertical'}\n                            renderItem={(item) => (\n                                <List.Item key={item.id}>\n                                    <List.Item.Meta\n                                        title={\n                                            <Row between={true}>\n                                                <span>{item.name}</span>\n                                                <Button type={'link'} style={{ color: 'red' }} onClick={() => delEpic({ id: item.id })}>\n                                                    删除\n                                                </Button>\n                                            </Row>\n                                        }\n                                        description={\n                                            <div>\n                                                <div>开始时间：{item.start}</div>\n                                                <div>结束时间：{item.end}</div>\n                                            </div>\n                                        }\n                                    />\n                                    <div>\n                                        {allTasks\n                                            ?.filter((task) => task.epicId === item.id)\n                                            .map((task) => (\n                                                <div>\n                                                    <Link to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`} key={task.id}>\n                                                        {task.name}\n                                                    </Link>\n                                                </div>\n                                            ))}\n                                    </div>\n                                </List.Item>\n                            )}\n                        ></List>\n                        <CreateEpic onClose={() => setEpicCreateOpen(false)} visible={epicCreateOpen}></CreateEpic>\n                    </>\n                )}\n            </ScreenContainer>\n        </>\n    );\n};\n","import { useGetKanbanId } from 'screens/kanban/util';\n/**useEpicSearchParams\n * useEpic 需要传入对象，这边组合成对象直接引用\n * 这边为了获取单独的数据，但是数据库没有处理，所以获取的还是全部的数据\n */\nexport const useEpicObj = () => ({ projectId: useGetKanbanId() });\n","import React from 'react';\nimport { Link, Navigate, Route, Routes, useLocation } from 'react-router-dom';\nimport { KanbanScreen } from 'screens/kanban';\nimport { EpicScreen } from 'screens/epic';\nimport styled from '@emotion/styled';\nimport { Menu } from 'antd';\n/**\n * 用于menu当前菜单高亮\n */\nconst useRouteType = () => {\n    const names = useLocation().pathname.split('/');\n    return names[names.length - 1];\n};\nexport const ProjectScreen = () => {\n    const routeType = useRouteType();\n    return (\n        <Container>\n            {/* 这样写的话会直接访问根路由下面的/kanban，就匹配不到当前路由下面规定的文件，一般为/是跟路由 */}\n            {/* <Link to={'/kanban'}>看板</Link> */}\n            <Aside>\n                <Menu mode={'inline'} selectedKeys={[routeType]}>\n                    <Menu.Item key={'kanban'}>\n                        <Link to={'kanban'}>看板</Link>\n                    </Menu.Item>\n                    <Menu.Item key={'epic'}>\n                        <Link to={'epic'}>任务组</Link>\n                    </Menu.Item>\n                </Menu>\n            </Aside>\n            <Main>\n                <Routes>\n                    {/*projects/:projectId/kanban*/}\n                    <Route path={'/kanban'} element={<KanbanScreen />} />\n                    {/*projects/:projectId/epic*/}\n                    <Route path={'/epic'} element={<EpicScreen />} />\n                    {/* {默认范围路由} */}\n                    <Navigate to={window.location.pathname + '/kanban'} replace={true} />\n                </Routes>\n            </Main>\n        </Container>\n    );\n};\n\nconst Aside = styled.aside`\n    display: flex;\n    background-color: rgb(244, 245, 247);\n`;\n\nconst Main = styled.div`\n    box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\n    display: flex;\n    overflow: hidden;\n`;\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 16rem 1fr; //表示两列，一个是16rem，一个按照剩下的自定义\n    width: 100%;\n    margin-top: 3px;\n`;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n  x1: \"97.6553341%\",\n  y1: \"35.6591143%\",\n  x2: \"37.202032%\",\n  y2: \"75.4891864%\",\n  id: \"uid392-1\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#0052CC\",\n  offset: \"7%\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#2684FF\",\n  offset: \"100%\"\n})), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  x1: \"8.43371138%\",\n  y1: \"60.1495759%\",\n  x2: \"64.1161517%\",\n  y2: \"23.5790285%\",\n  id: \"uid392-2\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#0052CC\",\n  offset: \"0%\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#2684FF\",\n  offset: \"100%\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  stroke: \"none\",\n  strokeWidth: 1,\n  fillRule: \"nonzero\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.3881081,27.9242105 C12.4881804,26.8071817 13.1062496,25.2917664 13.1062496,23.7115789 C13.1062496,22.1313915 12.4881804,20.6159762 11.3881081,19.4989474 L11.3881081,19.4989474 L3.74837838,11.7621053 L0.273513514,15.2926316 C-0.0900771727,15.6625064 -0.0900771727,16.2617042 0.273513514,16.6315789 L11.3881081,27.9242105 L11.3881081,27.9242105 Z\",\n  fill: \"currentColor\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.5027027,15.2926316 L11.3881081,4 L11.3881081,4 L11.3539189,4.03473684 L11.3539189,4.03473684 C9.08852466,6.36456187 9.09963243,10.1156459 11.3787838,12.4315789 L19.0247297,20.1652632 L22.5027027,16.6315789 C22.8662934,16.2617042 22.8662934,15.6625064 22.5027027,15.2926316 Z\",\n  fill: \"currentColor\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.3881081,12.4252632 C9.10895676,10.1093301 9.09784899,6.35824608 11.3632432,4.02842105 L3.43445946,12.0810526 L7.58067568,16.2936842 L11.3881081,12.4252632 Z\",\n  fill: \"url(#uid392-1)\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.1893243,15.6368421 L11.3881081,19.4989474 C12.4881804,20.6159762 13.1062496,22.1313915 13.1062496,23.7115789 C13.1062496,25.2917664 12.4881804,26.8071817 11.3881081,27.9242105 L19.3355405,19.8494737 L15.1893243,15.6368421 Z\",\n  fill: \"url(#uid392-2)\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M36.07,18.956 C36.07,20.646 35.394,21.842 33.418,21.842 C32.56,21.842 31.702,21.686 31,21.4 L31,23.662 C31.65,23.896 32.586,24.104 33.808,24.104 C37.032,24.104 38.41,21.946 38.41,18.8 L38.41,6.918 L36.07,6.918 L36.07,18.956 Z M41.894,7.568 C41.894,8.556 42.544,9.128 43.454,9.128 C44.364,9.128 45.014,8.556 45.014,7.568 C45.014,6.58 44.364,6.008 43.454,6.008 C42.544,6.008 41.894,6.58 41.894,7.568 Z M42.31,24 L44.546,24 L44.546,11 L42.31,11 L42.31,24 Z M47.926,24 L50.11,24 L50.11,16.33 C50.11,13.574 51.852,12.716 54.712,13.002 L54.712,10.818 C52.164,10.662 50.864,11.754 50.11,13.288 L50.11,11 L47.926,11 L47.926,24 Z M65.45,24 L65.45,21.66 C64.618,23.376 63.058,24.26 61.056,24.26 C57.598,24.26 55.856,21.322 55.856,17.5 C55.856,13.834 57.676,10.74 61.316,10.74 C63.214,10.74 64.67,11.598 65.45,13.288 L65.45,11 L67.686,11 L67.686,24 L65.45,24 Z M58.092,17.5 C58.092,20.62 59.34,22.18 61.654,22.18 C63.656,22.18 65.45,20.906 65.45,18.02 L65.45,16.98 C65.45,14.094 63.812,12.82 61.914,12.82 C59.392,12.82 58.092,14.484 58.092,17.5 Z M86.926,19.294 C86.926,16.226 84.898,15.056 81.284,14.146 C78.268,13.392 77.176,12.69 77.176,11.286 C77.176,9.726 78.502,8.946 80.738,8.946 C82.506,8.946 84.352,9.258 86.068,10.246 L86.068,7.906 C84.898,7.256 83.312,6.658 80.842,6.658 C76.864,6.658 74.836,8.634 74.836,11.286 C74.836,14.094 76.552,15.42 80.4,16.356 C83.65,17.136 84.586,17.942 84.586,19.45 C84.586,20.958 83.624,21.972 81.05,21.972 C78.788,21.972 76.344,21.374 74.758,20.542 L74.758,22.934 C76.084,23.61 77.618,24.26 80.92,24.26 C85.158,24.26 86.926,22.258 86.926,19.294 Z M95.09,24.26 C91.19,24.26 88.902,21.374 88.902,17.474 C88.902,13.574 91.19,10.74 95.09,10.74 C98.964,10.74 101.226,13.574 101.226,17.474 C101.226,21.374 98.964,24.26 95.09,24.26 Z M95.09,12.82 C92.308,12.82 91.086,15.004 91.086,17.474 C91.086,19.944 92.308,22.18 95.09,22.18 C97.846,22.18 99.042,19.944 99.042,17.474 C99.042,15.004 97.846,12.82 95.09,12.82 Z M106.92,9.622 C106.92,8.452 107.596,7.646 108.974,7.646 C109.494,7.646 109.988,7.698 110.378,7.776 L110.378,5.722 C109.988,5.618 109.546,5.514 108.87,5.514 C106.088,5.514 104.736,7.152 104.736,9.57 L104.736,11 L102.63,11 L102.63,13.08 L104.736,13.08 L104.736,24 L106.92,24 L106.92,13.08 L110.274,13.08 L110.274,11 L106.92,11 L106.92,9.622 Z M115.786,19.892 L115.786,13.08 L119.244,13.08 L119.244,11 L115.786,11 L115.786,8.244 L113.602,8.244 L113.602,11 L111.496,11 L111.496,13.08 L113.602,13.08 L113.602,19.944 C113.602,22.362 114.954,24 117.736,24 C118.412,24 118.854,23.896 119.244,23.792 L119.244,21.634 C118.854,21.712 118.36,21.816 117.84,21.816 C116.462,21.816 115.786,21.036 115.786,19.892 Z M125.432,24 L128.292,24 L130.528,17.708 L131.724,13.704 L132.92,17.708 L135.156,24 L138.016,24 L142.8,11 L140.33,11 L136.586,22.024 L132.79,11 L130.658,11 L126.862,22.024 L123.118,11 L120.648,11 L125.432,24 Z M153.538,24 L153.538,21.66 C152.706,23.376 151.146,24.26 149.144,24.26 C145.686,24.26 143.944,21.322 143.944,17.5 C143.944,13.834 145.764,10.74 149.404,10.74 C151.302,10.74 152.758,11.598 153.538,13.288 L153.538,11 L155.774,11 L155.774,24 L153.538,24 Z M146.18,17.5 C146.18,20.62 147.428,22.18 149.742,22.18 C151.744,22.18 153.538,20.906 153.538,18.02 L153.538,16.98 C153.538,14.094 151.9,12.82 150.002,12.82 C147.48,12.82 146.18,14.484 146.18,17.5 Z M159.154,24 L161.338,24 L161.338,16.33 C161.338,13.574 163.08,12.716 165.94,13.002 L165.94,10.818 C163.392,10.662 162.092,11.754 161.338,13.288 L161.338,11 L159.154,11 L159.154,24 Z M178.108,23.48 C177.042,24.052 175.404,24.26 174.078,24.26 C169.216,24.26 167.084,21.452 167.084,17.474 C167.084,13.548 169.268,10.74 173.22,10.74 C177.224,10.74 178.836,13.522 178.836,17.474 L178.836,18.488 L169.346,18.488 C169.658,20.698 171.088,22.128 174.156,22.128 C175.664,22.128 176.938,21.842 178.108,21.426 L178.108,23.48 Z M173.116,12.768 C170.75,12.768 169.554,14.302 169.32,16.564 L176.574,16.564 C176.444,14.146 175.352,12.768 173.116,12.768 Z\",\n  fill: \"inherit\",\n  fillRule: \"evenodd\"\n}));\n\nfunction SvgSoftwareLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 179 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    className: \"css-sq9aeg-Logo\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSoftwareLogo);\nexport default __webpack_public_path__ + \"static/media/software-logo.ec204298.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\nimport { Drawer, Button, Spin, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { projectListAction, selectProjectModalOpen } from './project-list.slice';\nimport { useProjectModal } from 'utils/url';\nimport { UserSelect } from 'components/user-select';\nimport { useEditProject, useAddProject } from 'utils/project';\nimport { ErrorBox } from 'components/lib';\nimport styled from '@emotion/styled';\nimport { useProjectsQueryKey } from './util';\n\nexport const ProjectModal = (props: { projectModalOpen: boolean; onClose: () => void }) => {\n    const dispatch = useDispatch();\n    // const projectModalOpen = useSelector(selectProjectModalOpen);\n    const { projectModalOpenUrl, close, isLoading, editingProjectDetail } = useProjectModal();\n    const useMutateProject = editingProjectDetail ? useEditProject : useAddProject;\n    const { isLoading: commitLoading, mutateAsync, error } = useMutateProject();\n    const title = editingProjectDetail ? '编辑项目' : '创建项目';\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        form.setFieldsValue(editingProjectDetail);\n        console.log(editingProjectDetail);\n    }, [editingProjectDetail, form]);\n\n    const onFinish = (values: any) => {\n        mutateAsync({ ...editingProjectDetail, ...values }).then(() => {\n            form.resetFields();\n            close();\n        });\n    };\n    const closeModal = () => {\n        form.resetFields();\n        close();\n    };\n    return (\n        // <Drawer title=\"Basic Drawer\" width=\"100%\" visible={props.projectModalOpen} onClose={props.onClose}>\n        // <Drawer title=\"Basic Drawer\" width=\"100%\" visible={projectModalOpen} onClose={() => dispatch(projectListAction.closeProjectModal())}>\n        <Drawer title={title} width=\"100%\" visible={projectModalOpenUrl} onClose={closeModal} forceRender={true}>\n            {/* <Button type=\"primary\" onClick={props.onClose}>\n                close\n            </Button> */}\n            {/* <Button type=\"primary\" onClick={() => dispatch(projectListAction.closeProjectModal())}>\n                close\n            </Button> */}\n            {/* <Button type=\"primary\" onClick={close}>\n                closeurl\n            </Button> */}\n            {\n                <Container>\n                    {isLoading ? (\n                        <Spin size=\"large\" />\n                    ) : (\n                        <>\n                            <ErrorBox error={error} />\n                            <Form layout={'vertical'} style={{ width: '40rem' }} onFinish={onFinish} form={form}>\n                                <Form.Item label={'名称'} name={'name'} rules={[{ required: true, message: '请输入项目名' }]}>\n                                    <Input placeholder={'请输入项目名称'} />\n                                </Form.Item>\n\n                                <Form.Item label={'部门'} name={'organization'} rules={[{ required: true, message: '请输入部门名' }]}>\n                                    <Input placeholder={'请输入部门名'} />\n                                </Form.Item>\n\n                                <Form.Item label={'负责人'} name={'persionId'}>\n                                    <UserSelect defaultOptionName={'负责人'}></UserSelect>\n                                </Form.Item>\n\n                                <Form.Item style={{ textAlign: 'right' }}>\n                                    <Button type={'primary'} htmlType={'submit'}>\n                                        提交\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </>\n                    )}\n                </Container>\n            }\n        </Drawer>\n    );\n};\n\nconst Container = styled.div`\n    height: 80vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n","import React from 'react';\nimport { Popover, Button, Typography, List, Divider } from 'antd';\nimport { useProjects } from 'utils/project';\nimport { ButtonNoPadding } from './lib';\nimport { useProjectModal } from 'utils/url';\n/**\n * 刷新弹窗的收藏列表refetch\n */\nexport const ProjectPopover = (props: { setprojectModalOpen: (isOpen: boolean) => void }) => {\n    const { data: projects, refetch } = useProjects();\n    const pinnedProjects = projects?.filter((project) => project.pin);\n    const { projectModalOpenUrl, open } = useProjectModal();\n    const content = (\n        <div>\n            <Typography.Text type={'secondary'}>收藏项目</Typography.Text>\n            <List>\n                {pinnedProjects?.map((project) => (\n                    <List.Item key={project.id}>\n                        <List.Item.Meta title={project.name} />\n                    </List.Item>\n                ))}\n            </List>\n            <Divider />\n            {/* <ButtonNoPadding type=\"link\" onClick={() => props.setprojectModalOpen(true)}>\n                创建项目\n            </ButtonNoPadding> */}\n            <ButtonNoPadding type=\"link\" onClick={open}>\n                创建项目\n            </ButtonNoPadding>\n        </div>\n    );\n    return (\n        <Popover content={content} title=\"我的项目收藏\" placement=\"bottom\" onVisibleChange={() => refetch()}>\n            <span>项目</span>\n        </Popover>\n    );\n};\n","import React, { useState } from 'react';\nimport { Popover, Button, Typography, List, Divider } from 'antd';\nimport { useMount } from 'utils/index1';\nimport { useHttp } from 'utils/http';\n/**\n * 刷新弹窗的收藏列表refetch\n */\nexport const UserPopover = () => {\n    const [user, setUser] = useState<any>([]);\n    const client = useHttp();\n    useMount(() => {\n        client('users').then((res) => setUser(res));\n    });\n    const content = (\n        <div>\n            {/* <Typography.Text type={'secondary'}>组员列表</Typography.Text> */}\n            <List>\n                {user?.map((item: any) => (\n                    <List.Item key={item.id}>\n                        <List.Item.Meta title={item.name} />\n                    </List.Item>\n                ))}\n            </List>\n        </div>\n    );\n    return (\n        <Popover content={content} title=\"组员列表\" placement=\"bottom\">\n            <span>用户</span>\n        </Popover>\n    );\n};\n","import React, { useState } from 'react';\n// import ProjectListScreen from 'screens/project-list' 没有默认的export default 这样会报错\nimport { ProjectListScreen } from 'screens/project-list-tsx';\nimport { ProjectScreen } from 'screens/project';\nimport { Pracetice } from 'screens/practice-tsx';\nimport { CssView } from 'screens/css';\nimport { useAuth } from 'context/auth-context';\nimport styled from '@emotion/styled';\nimport { Row } from 'components/lib';\nimport { Navigate, Route, Routes } from 'react-router';\nimport { BrowserRouter as Router } from 'react-router-dom';\n//svg(可以自定义图片的颜色等样式，但是图片引入是不能修改的)当成组件引入 可以自定义宽高颜色，比<img>图片引入高级\nimport { ReactComponent as SoftLogo } from 'assets/software-logo.svg';\nimport { Button, Dropdown, Menu } from 'antd';\nimport { resetRoute } from 'utils/index1';\nimport { ProjectModal } from '../project-list-tsx/project-modal';\nimport { ProjectPopover } from 'components/project-popover';\nimport { UserPopover } from 'components/user-popover';\nimport { useDispatch } from 'react-redux';\nimport { projectListAction } from 'screens/project-list-tsx/project-list.slice';\nexport const AllPage = () => {\n    const [projectModalOpen, setprojectModalOpen] = useState(false);\n    const dispatch = useDispatch();\n    return (\n        <Container>\n            <Router>\n                <PageHeader setprojectModalOpen={setprojectModalOpen}></PageHeader>\n                <Main>\n                    {/* <ProjectListScreen></ProjectListScreen>\n                <Pracetice></Pracetice>\n                <CssView></CssView> */}\n                    <Routes>\n                        <Route path={'/projects'} element={<ProjectListScreen setprojectModalOpen={setprojectModalOpen} />} />\n                        <Route path={'/projects/:projectId/*'} element={<ProjectScreen />} />\n                        {/* {默认范围路由} */}\n                        <Navigate to={'/projects'} />\n                    </Routes>\n                    {/* <Button onClick={() => setprojectModalOpen(true)}>测试打开窗口</Button> */}\n                    {/* <Button onClick={() => dispatch(projectListAction.openProjectModal())}>测试打开窗---口w</Button> */}\n                </Main>\n                <ProjectModal projectModalOpen={projectModalOpen} onClose={() => setprojectModalOpen(false)}></ProjectModal>\n            </Router>\n        </Container>\n    );\n};\nconst PageHeader = (props: { setprojectModalOpen: (isOpen: boolean) => void }) => {\n    return (\n        <Header between={true}>\n            <HeaderLeft gap={true}>\n                <Button type=\"link\" onClick={resetRoute}>\n                    <SoftLogo width={'18rem'} color={'rgb(38, 132, 255)'}></SoftLogo>\n                </Button>\n                {/* <h3>项目</h3>\n                <h3>用户</h3> */}\n                <ProjectPopover setprojectModalOpen={props.setprojectModalOpen} />\n                <UserPopover></UserPopover>\n            </HeaderLeft>\n            <HeaderRight>\n                <User />\n            </HeaderRight>\n        </Header>\n    );\n};\nconst User = () => {\n    const { user, logOut } = useAuth();\n    return (\n        <Dropdown\n            overlay={\n                <Menu>\n                    <Menu.Item>\n                        <Button type={'link'} onClick={() => logOut()}>\n                            退出\n                        </Button>\n                    </Menu.Item>\n                </Menu>\n            }\n        >\n            <Button type={'link'}> Hi, {user?.name}</Button>\n        </Dropdown>\n    );\n};\nconst Container = styled.div`\n    display: grid;\n    grid-template-rows: 6rem 1fr; //分为头部 和主要内容两部分\n    height: 100vh;\n`;\nconst Header = styled(Row)`\n    padding: 3.2rem;\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\n    z-index: 1;\n`;\nconst HeaderLeft = styled(Row)``;\nconst HeaderRight = styled.div``;\nconst Main = styled.main`\n    display: flex;\n    overflow: hidden;\n`;\n","// 错误边界文件，在开发环境，页面有错误的时候，rect会进行提示，\n// 在生产环境，react并不会抛出异常，只要有错，页面就会空白，无法知道错误在哪里，\n// react团队认为空白比报错来的更好，\n// 这个页面为了生产也能抛出错误，\n// 写法在官网,只能用class： https://react.docschina.org/docs/error-boundaries.html\n// https://github.com/bvaughn/react-error-boundary react已经出了插件去兼容这个问题，如是，与我们下面的代码差不多，可以试着用插件也可\n//用下面的组件包裹app.tsx的内容，即可接收错误信息\n\nimport React, { ReactNode } from 'react';\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement;\n\n//React.Component<p,s>p:props传入的,s:state\n// export class ErrorBoundary extends React.Component<any,any>{\n// export class ErrorBoundary extends React.Component<{children:ReactNode,fallbackRender:FallbackRender},any>{\n//children:ReactNode改写成React.PropsWithChildren，any改写成{ error: Error | null }\nexport class ErrorBoundary extends React.Component<React.PropsWithChildren<{ fallbackRender: FallbackRender }>, { error: Error | null }> {\n    state = { error: null };\n\n    // 当子组件抛出异常，这里会接收到并且调用\n    static getDerivedStateFromError(error: Error) {\n        return { error };\n    }\n\n    render() {\n        const { error } = this.state;\n        const { fallbackRender, children } = this.props;\n        if (error) {\n            return fallbackRender({ error });\n        }\n        return children;\n    }\n}\n","import { useAuth } from 'context/auth-context';\nimport React from 'react';\nimport './App.css';\nimport { LoginScreen } from 'login/index';\nimport { AllPage } from 'screens/allPage/allPage';\nimport { ErrorBoundary } from 'components/error-boundary';\nimport { FullPageErrorFallback } from 'components/lib';\n\nfunction App() {\n    const { user } = useAuth();\n    console.log(user, 'App.jsx-user');\n    return (\n        <div className=\"App\">\n            <ErrorBoundary fallbackRender={FullPageErrorFallback}>\n                {/* 登录才显示里面的内容 */}\n                {user ? <AllPage /> : <LoginScreen />}\n            </ErrorBoundary>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from 'store/index';\n\ninterface State {\n    projectModalOpen: boolean;\n}\n\nconst initialState: State = {\n    projectModalOpen: false,\n};\n/**\n *  https://redux-toolkit.js.org/tutorials/quick-start\n *  state.projectModalOpen = true;\n *  直接给state赋值在正常的redux是不被允许的，会直接改变原对象，造成无法渲染的问题，\n * 在这边是用的redux-toolkit,里面有引用immer(数据不可变),会帮我们处理数据，在此没有违背纯函数的原则\n */\nexport const projectListSlice = createSlice({\n    name: 'projectListSlice',\n    initialState,\n    reducers: {\n        openProjectModal(state) {\n            state.projectModalOpen = true;\n        },\n        closeProjectModal(state) {\n            state.projectModalOpen = false;\n        },\n    },\n});\n\nexport const projectListAction = projectListSlice.actions;\n\nexport const selectProjectModalOpen = (state: RootState) => state.projectList.projectModalOpen;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { User } from 'types/user';\nimport * as auth from 'utils/auth-provider';\nimport { AuthForm, bootstrapUser } from 'context/auth-context';\nimport { AppDispatch, RootState } from 'store';\ninterface State {\n    user: User | null;\n}\n\nconst initialState: State = {\n    user: null,\n};\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setUser(state, action) {\n            state.user = action.payload;\n        },\n    },\n});\n\nconst { setUser } = authSlice.actions;\nexport const selectUser = (state: RootState) => state.auth.user;\n\n//thunk 异步\nexport const loginThunk = (form: AuthForm) => (dispatch: AppDispatch) => auth.loginapi(form).then((user) => dispatch(setUser(user)));\nexport const registerThunk = (form: AuthForm) => (dispatch: AppDispatch) => auth.register(form).then((user) => dispatch(setUser(user)));\nexport const logoutThunk = () => (dispatch: AppDispatch) => auth.logOut().then((user) => dispatch(setUser(null)));\nexport const bootstrapUserThunk = () => (dispatch: AppDispatch) => bootstrapUser().then((user) => dispatch(setUser(user)));\n","import { configureStore } from '@reduxjs/toolkit';\nimport { projectListSlice } from 'screens/project-list-tsx/project-list.slice';\nimport { authSlice } from './auth.slice';\n\nexport const rootReducer = {\n    //引入单个切片的action\n    projectList: projectListSlice.reducer,\n    auth: authSlice.reducer,\n};\nexport const store = configureStore({\n    reducer: rootReducer,\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n/**\n * ReturnType ts自带的方法 ，解析出函数返回的类型\n */\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React, { ReactNode } from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from 'store/index';\nimport { AuthProvider } from './auth-context';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n//包裹主文件 index.tsx\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\n    //参数children 参数children的类型:{children:ReactNode},\n    const queryClient = new QueryClient();\n\n    return (\n        <QueryClientProvider client={queryClient}>\n            <Provider store={store}>\n                <AuthProvider> {children}</AuthProvider>;\n            </Provider>\n        </QueryClientProvider>\n    );\n};\n","import './wdyr';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import {loadDevTools} from \"jira-dev-tool\"\nimport 'antd/dist/antd.less';\n//antd.less 放在loadDevTools后面引用\nimport { AppProviders } from './context/index';\nReactDOM.render(\n    <React.StrictMode>\n        <AppProviders>\n            <App />\n        </AppProviders>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}